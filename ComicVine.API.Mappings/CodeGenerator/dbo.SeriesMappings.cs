// <auto-generated>
// <copyright file="dbo.ISeriesModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Series model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.dbo
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class SeriesMapperExtensions
    {
        public static readonly SeriesMapper Mapper = new SeriesMapper();

        public static ISeries MapToEntity(this ISeriesModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this ISeriesModel model, ref ISeries entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static ISeriesModel MapToModel(this ISeries entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static ISeriesModel MapToModelLite(this ISeries entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static ISeriesModel MapToModelListing(this ISeries entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static ISeriesSearchModel MapToSearchModel(this ISeriesModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this ISeriesModel model, ISeries entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class SeriesMapper : ISeriesMapper
    {
        public ISeries MapToEntity(ISeriesModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<Series, ISeriesModel>(model);
            // Series Properties
            entity.Startyear = model.Startyear;
            // Related Objects
            entity.PublisherId = model.PublisherId;
            entity.Publisher = (Publisher)model.Publisher.MapToEntity();
            entity.FirstEpisodeId = model.FirstEpisodeId;
            entity.FirstEpisode = (Episode)model.FirstEpisode.MapToEntity();
            entity.LastEpisodeId = model.LastEpisodeId;
            entity.LastEpisode = (Episode)model.LastEpisode.MapToEntity();
            // Associated Objects
            entity.CharacterCredits = model.CharacterCredits?.Where(i => i.Active).Select(CharacterMapperExtensions.MapToEntity).Cast<Character>().ToList();
            entity.Episodes = model.Episodes?.Where(i => i.Active).Select(EpisodeMapperExtensions.MapToEntity).Cast<Episode>().ToList();
            entity.LocationCredits = model.LocationCredits?.Where(i => i.Active).Select(LocationMapperExtensions.MapToEntity).Cast<Location>().ToList();
            entity.SeriesAliases = model.SeriesAliases?.Where(i => i.Active).Select(SeriesAliasMapperExtensions.MapToEntity).Cast<SeriesAlias>().ToList();
            // Return Entity
            return entity;
        }

        public void MapToEntity(ISeriesModel model, ref ISeries entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // Series Properties
            entity.Startyear = model.Startyear;
            // Related Objects
            entity.PublisherId = model.PublisherId;
            entity.Publisher = (Publisher)model.Publisher.MapToEntity();
            entity.FirstEpisodeId = model.FirstEpisodeId;
            entity.FirstEpisode = (Episode)model.FirstEpisode.MapToEntity();
            entity.LastEpisodeId = model.LastEpisodeId;
            entity.LastEpisode = (Episode)model.LastEpisode.MapToEntity();
            // Associated Objects
            entity.CharacterCredits = (ICollection<ICharacter>)model.CharacterCredits?.Where(i => i.Active).Select(CharacterMapperExtensions.MapToEntity).Cast<Character>();
            entity.Episodes = (ICollection<IEpisode>)model.Episodes?.Where(i => i.Active).Select(EpisodeMapperExtensions.MapToEntity).Cast<Episode>();
            entity.LocationCredits = (ICollection<ILocation>)model.LocationCredits?.Where(i => i.Active).Select(LocationMapperExtensions.MapToEntity).Cast<Location>();
            entity.SeriesAliases = (ICollection<ISeriesAlias>)model.SeriesAliases?.Where(i => i.Active).Select(SeriesAliasMapperExtensions.MapToEntity).Cast<SeriesAlias>();
        }

        public ISeriesModel MapToModel(ISeries entity)
        {
            var model = NameableEntityMapper.MapToModel<ISeries, SeriesModel>(entity);
            // Series Properties
            model.Startyear = entity.Startyear;
            // Related Objects
            model.PublisherId = entity.PublisherId;
            model.Publisher = entity.Publisher.MapToModel();
            model.FirstEpisodeId = entity.FirstEpisodeId;
            model.FirstEpisode = entity.FirstEpisode.MapToModel();
            model.LastEpisodeId = entity.LastEpisodeId;
            model.LastEpisode = entity.LastEpisode.MapToModel();
            // Associated Objects
            model.CharacterCredits = entity.CharacterCredits?.Where(i => i.Active).Select(CharacterMapperExtensions.MapToModel).ToList();
            model.Episodes = entity.Episodes?.Where(i => i.Active).Select(EpisodeMapperExtensions.MapToModel).ToList();
            model.LocationCredits = entity.LocationCredits?.Where(i => i.Active).Select(LocationMapperExtensions.MapToModel).ToList();
            model.SeriesAliases = entity.SeriesAliases?.Where(i => i.Active).Select(SeriesAliasMapperExtensions.MapToModel).ToList();
            // Return Entity
            return model;
        }

        public ISeriesModel MapToModelLite(ISeries entity)
        {
            var model = NameableEntityMapper.MapToModelLite<ISeries, SeriesModel>(entity);
            // Series Properties
            model.Startyear = entity.Startyear;
            // Related Objects
            model.PublisherId = entity.PublisherId;
            model.FirstEpisodeId = entity.FirstEpisodeId;
            model.LastEpisodeId = entity.LastEpisodeId;
            // Return Entity
            return model;
        }

        public ISeriesModel MapToModelListing(ISeries entity)
        {
            var model = NameableEntityMapper.MapToModelListing<ISeries, SeriesModel>(entity);
            // Series Properties
            model.Startyear = entity.Startyear;
            // Related Objects
            model.PublisherId = entity.PublisherId;
            model.FirstEpisodeId = entity.FirstEpisodeId;
            model.LastEpisodeId = entity.LastEpisodeId;
            // Return Entity
            return model;
        }

        public ISeriesSearchModel MapToSearchModel(ISeriesModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<ISeriesModel, SeriesSearchModel>(model);
            // Search Properties
            searchModel.PublisherId = model.PublisherId;
            searchModel.PublisherCustomKey = model.Publisher.CustomKey;
            searchModel.PublisherName = model.Publisher.Name;
            searchModel.PublisherDescription = model.Publisher.Description;
            searchModel.FirstEpisodeId = model.FirstEpisodeId;
            searchModel.FirstEpisodeCustomKey = model.FirstEpisode.CustomKey;
            searchModel.FirstEpisodeName = model.FirstEpisode.Name;
            searchModel.FirstEpisodeDescription = model.FirstEpisode.Description;
            searchModel.LastEpisodeId = model.LastEpisodeId;
            searchModel.LastEpisodeCustomKey = model.LastEpisode.CustomKey;
            searchModel.LastEpisodeName = model.LastEpisode.Name;
            searchModel.LastEpisodeDescription = model.LastEpisode.Description;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(ISeriesModel model, ISeries entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // Series Properties
                && model.Startyear == entity.Startyear
                // Related Objects
                && model.PublisherId == entity.PublisherId
                && model.FirstEpisodeId == entity.FirstEpisodeId
                && model.LastEpisodeId == entity.LastEpisodeId
                ;
        }
    }
}
