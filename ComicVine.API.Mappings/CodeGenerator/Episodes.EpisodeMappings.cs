// <auto-generated>
// <copyright file="Episodes.IEpisodeModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Episode model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Episodes
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class EpisodeMapperExtensions
    {
        public static readonly EpisodeMapper Mapper = new EpisodeMapper();

        public static IEpisode MapToEntity(this IEpisodeModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IEpisodeModel model, ref IEpisode entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IEpisodeModel MapToModel(this IEpisode entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IEpisodeModel MapToModelLite(this IEpisode entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IEpisodeModel MapToModelListing(this IEpisode entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IEpisodeSearchModel MapToSearchModel(this IEpisodeModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IEpisodeModel model, IEpisode entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class EpisodeMapper : IEpisodeMapper
    {
        public IEpisode MapToEntity(IEpisodeModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<Episode, IEpisodeModel>(model);
            // Episode Properties
            entity.HasStaffReview = model.HasStaffReview;
            entity.AirDate = model.AirDate;
            entity.EpisodeCode = model.EpisodeCode;
            entity.SeasonNumber = model.SeasonNumber;
            entity.EpisodeNumber = model.EpisodeNumber;
            // Related Objects
            entity.PrimaryImageFileId = model.PrimaryImageFileId;
            entity.PrimaryImageFile = (ImageFile)model.PrimaryImageFile?.MapToEntity();
            entity.SeriesId = model.SeriesId;
            entity.Series = (Series)model.Series?.MapToEntity();
            // Associated Objects
            entity.EpisodeAliases = model.EpisodeAliases?.Where(i => i.Active).Select(EpisodeAliasMapperExtensions.MapToEntity).Cast<EpisodeAlias>().ToList();
            entity.EpisodeCharacters = model.EpisodeCharacters?.Where(i => i.Active).Select(EpisodeCharacterMapperExtensions.MapToEntity).Cast<EpisodeCharacter>().ToList();
            entity.EpisodeCharactersDied = model.EpisodeCharactersDied?.Where(i => i.Active).Select(EpisodeCharacterDiedMapperExtensions.MapToEntity).Cast<EpisodeCharacterDied>().ToList();
            entity.EpisodeCharacterFirstAppearances = model.EpisodeCharacterFirstAppearances?.Where(i => i.Active).Select(EpisodeCharacterFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeCharacterFirstAppearance>().ToList();
            entity.EpisodeConcepts = model.EpisodeConcepts?.Where(i => i.Active).Select(EpisodeConceptMapperExtensions.MapToEntity).Cast<EpisodeConcept>().ToList();
            entity.EpisodeConceptFirstAppearances = model.EpisodeConceptFirstAppearances?.Where(i => i.Active).Select(EpisodeConceptFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeConceptFirstAppearance>().ToList();
            entity.EpisodeLocations = model.EpisodeLocations?.Where(i => i.Active).Select(EpisodeLocationMapperExtensions.MapToEntity).Cast<EpisodeLocation>().ToList();
            entity.EpisodeLocationFirstAppearances = model.EpisodeLocationFirstAppearances?.Where(i => i.Active).Select(EpisodeLocationFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeLocationFirstAppearance>().ToList();
            entity.EpisodeObjects = model.EpisodeObjects?.Where(i => i.Active).Select(EpisodeObjectMapperExtensions.MapToEntity).Cast<EpisodeObject>().ToList();
            entity.EpisodeObjectFirstAppearances = model.EpisodeObjectFirstAppearances?.Where(i => i.Active).Select(EpisodeObjectFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeObjectFirstAppearance>().ToList();
            entity.EpisodePeople = model.EpisodePeople?.Where(i => i.Active).Select(EpisodePersonMapperExtensions.MapToEntity).Cast<EpisodePerson>().ToList();
            entity.EpisodeStoryArcs = model.EpisodeStoryArcs?.Where(i => i.Active).Select(EpisodeStoryArcMapperExtensions.MapToEntity).Cast<EpisodeStoryArc>().ToList();
            entity.EpisodeStoryArcFirstAppearances = model.EpisodeStoryArcFirstAppearances?.Where(i => i.Active).Select(EpisodeStoryArcFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeStoryArcFirstAppearance>().ToList();
            entity.EpisodeTeams = model.EpisodeTeams?.Where(i => i.Active).Select(EpisodeTeamMapperExtensions.MapToEntity).Cast<EpisodeTeam>().ToList();
            entity.EpisodeTeamFirstAppearances = model.EpisodeTeamFirstAppearances?.Where(i => i.Active).Select(EpisodeTeamFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeTeamFirstAppearance>().ToList();
            // Return Entity
            return entity;
        }

        public void MapToEntity(IEpisodeModel model, ref IEpisode entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // Episode Properties
            entity.HasStaffReview = model.HasStaffReview;
            entity.AirDate = model.AirDate;
            entity.EpisodeCode = model.EpisodeCode;
            entity.SeasonNumber = model.SeasonNumber;
            entity.EpisodeNumber = model.EpisodeNumber;
            // Related Objects
            entity.PrimaryImageFileId = model.PrimaryImageFileId;
            entity.PrimaryImageFile = (ImageFile)model.PrimaryImageFile?.MapToEntity();
            entity.SeriesId = model.SeriesId;
            entity.Series = (Series)model.Series?.MapToEntity();
            // Associated Objects
            entity.EpisodeAliases = (ICollection<IEpisodeAlias>)model.EpisodeAliases?.Where(i => i.Active).Select(EpisodeAliasMapperExtensions.MapToEntity).Cast<EpisodeAlias>();
            entity.EpisodeCharacters = (ICollection<IEpisodeCharacter>)model.EpisodeCharacters?.Where(i => i.Active).Select(EpisodeCharacterMapperExtensions.MapToEntity).Cast<EpisodeCharacter>();
            entity.EpisodeCharactersDied = (ICollection<IEpisodeCharacterDied>)model.EpisodeCharactersDied?.Where(i => i.Active).Select(EpisodeCharacterDiedMapperExtensions.MapToEntity).Cast<EpisodeCharacterDied>();
            entity.EpisodeCharacterFirstAppearances = (ICollection<IEpisodeCharacterFirstAppearance>)model.EpisodeCharacterFirstAppearances?.Where(i => i.Active).Select(EpisodeCharacterFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeCharacterFirstAppearance>();
            entity.EpisodeConcepts = (ICollection<IEpisodeConcept>)model.EpisodeConcepts?.Where(i => i.Active).Select(EpisodeConceptMapperExtensions.MapToEntity).Cast<EpisodeConcept>();
            entity.EpisodeConceptFirstAppearances = (ICollection<IEpisodeConceptFirstAppearance>)model.EpisodeConceptFirstAppearances?.Where(i => i.Active).Select(EpisodeConceptFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeConceptFirstAppearance>();
            entity.EpisodeLocations = (ICollection<IEpisodeLocation>)model.EpisodeLocations?.Where(i => i.Active).Select(EpisodeLocationMapperExtensions.MapToEntity).Cast<EpisodeLocation>();
            entity.EpisodeLocationFirstAppearances = (ICollection<IEpisodeLocationFirstAppearance>)model.EpisodeLocationFirstAppearances?.Where(i => i.Active).Select(EpisodeLocationFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeLocationFirstAppearance>();
            entity.EpisodeObjects = (ICollection<IEpisodeObject>)model.EpisodeObjects?.Where(i => i.Active).Select(EpisodeObjectMapperExtensions.MapToEntity).Cast<EpisodeObject>();
            entity.EpisodeObjectFirstAppearances = (ICollection<IEpisodeObjectFirstAppearance>)model.EpisodeObjectFirstAppearances?.Where(i => i.Active).Select(EpisodeObjectFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeObjectFirstAppearance>();
            entity.EpisodePeople = (ICollection<IEpisodePerson>)model.EpisodePeople?.Where(i => i.Active).Select(EpisodePersonMapperExtensions.MapToEntity).Cast<EpisodePerson>();
            entity.EpisodeStoryArcs = (ICollection<IEpisodeStoryArc>)model.EpisodeStoryArcs?.Where(i => i.Active).Select(EpisodeStoryArcMapperExtensions.MapToEntity).Cast<EpisodeStoryArc>();
            entity.EpisodeStoryArcFirstAppearances = (ICollection<IEpisodeStoryArcFirstAppearance>)model.EpisodeStoryArcFirstAppearances?.Where(i => i.Active).Select(EpisodeStoryArcFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeStoryArcFirstAppearance>();
            entity.EpisodeTeams = (ICollection<IEpisodeTeam>)model.EpisodeTeams?.Where(i => i.Active).Select(EpisodeTeamMapperExtensions.MapToEntity).Cast<EpisodeTeam>();
            entity.EpisodeTeamFirstAppearances = (ICollection<IEpisodeTeamFirstAppearance>)model.EpisodeTeamFirstAppearances?.Where(i => i.Active).Select(EpisodeTeamFirstAppearanceMapperExtensions.MapToEntity).Cast<EpisodeTeamFirstAppearance>();
        }

        public IEpisodeModel MapToModel(IEpisode entity)
        {
            var model = NameableEntityMapper.MapToModel<IEpisode, EpisodeModel>(entity);
            // Episode Properties
            model.HasStaffReview = entity.HasStaffReview;
            model.AirDate = entity.AirDate;
            model.EpisodeCode = entity.EpisodeCode;
            model.SeasonNumber = entity.SeasonNumber;
            model.EpisodeNumber = entity.EpisodeNumber;
            // Related Objects
            model.PrimaryImageFileId = entity.PrimaryImageFileId;
            model.PrimaryImageFile = entity.PrimaryImageFile?.MapToModel();
            model.SeriesId = entity.SeriesId;
            model.Series = entity.Series?.MapToModel();
            // Associated Objects
            model.EpisodeAliases = entity.EpisodeAliases?.Where(i => i.Active).Select(EpisodeAliasMapperExtensions.MapToModelLite).ToList();
            model.EpisodeCharacters = entity.EpisodeCharacters?.Where(i => i.Active).Select(EpisodeCharacterMapperExtensions.MapToModelLite).ToList();
            model.EpisodeCharactersDied = entity.EpisodeCharactersDied?.Where(i => i.Active).Select(EpisodeCharacterDiedMapperExtensions.MapToModelLite).ToList();
            model.EpisodeCharacterFirstAppearances = entity.EpisodeCharacterFirstAppearances?.Where(i => i.Active).Select(EpisodeCharacterFirstAppearanceMapperExtensions.MapToModelLite).ToList();
            model.EpisodeConcepts = entity.EpisodeConcepts?.Where(i => i.Active).Select(EpisodeConceptMapperExtensions.MapToModelLite).ToList();
            model.EpisodeConceptFirstAppearances = entity.EpisodeConceptFirstAppearances?.Where(i => i.Active).Select(EpisodeConceptFirstAppearanceMapperExtensions.MapToModelLite).ToList();
            model.EpisodeLocations = entity.EpisodeLocations?.Where(i => i.Active).Select(EpisodeLocationMapperExtensions.MapToModelLite).ToList();
            model.EpisodeLocationFirstAppearances = entity.EpisodeLocationFirstAppearances?.Where(i => i.Active).Select(EpisodeLocationFirstAppearanceMapperExtensions.MapToModelLite).ToList();
            model.EpisodeObjects = entity.EpisodeObjects?.Where(i => i.Active).Select(EpisodeObjectMapperExtensions.MapToModelLite).ToList();
            model.EpisodeObjectFirstAppearances = entity.EpisodeObjectFirstAppearances?.Where(i => i.Active).Select(EpisodeObjectFirstAppearanceMapperExtensions.MapToModelLite).ToList();
            model.EpisodePeople = entity.EpisodePeople?.Where(i => i.Active).Select(EpisodePersonMapperExtensions.MapToModelLite).ToList();
            model.EpisodeStoryArcs = entity.EpisodeStoryArcs?.Where(i => i.Active).Select(EpisodeStoryArcMapperExtensions.MapToModelLite).ToList();
            model.EpisodeStoryArcFirstAppearances = entity.EpisodeStoryArcFirstAppearances?.Where(i => i.Active).Select(EpisodeStoryArcFirstAppearanceMapperExtensions.MapToModelLite).ToList();
            model.EpisodeTeams = entity.EpisodeTeams?.Where(i => i.Active).Select(EpisodeTeamMapperExtensions.MapToModelLite).ToList();
            model.EpisodeTeamFirstAppearances = entity.EpisodeTeamFirstAppearances?.Where(i => i.Active).Select(EpisodeTeamFirstAppearanceMapperExtensions.MapToModelLite).ToList();
            // Return Entity
            return model;
        }

        public IEpisodeModel MapToModelLite(IEpisode entity)
        {
            var model = NameableEntityMapper.MapToModelLite<IEpisode, EpisodeModel>(entity);
            // Episode Properties
            model.HasStaffReview = entity.HasStaffReview;
            model.AirDate = entity.AirDate;
            model.EpisodeCode = entity.EpisodeCode;
            model.SeasonNumber = entity.SeasonNumber;
            model.EpisodeNumber = entity.EpisodeNumber;
            // Related Objects
            model.PrimaryImageFileId = entity.PrimaryImageFileId;
            model.SeriesId = entity.SeriesId;
            // Return Entity
            return model;
        }

        public IEpisodeModel MapToModelListing(IEpisode entity)
        {
            var model = NameableEntityMapper.MapToModelListing<IEpisode, EpisodeModel>(entity);
            // Episode Properties
            model.HasStaffReview = entity.HasStaffReview;
            model.AirDate = entity.AirDate;
            model.EpisodeCode = entity.EpisodeCode;
            model.SeasonNumber = entity.SeasonNumber;
            model.EpisodeNumber = entity.EpisodeNumber;
            // Related Objects
            model.PrimaryImageFileId = entity.PrimaryImageFileId;
            model.SeriesId = entity.SeriesId;
            // Return Entity
            return model;
        }

        public IEpisodeSearchModel MapToSearchModel(IEpisodeModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<IEpisodeModel, EpisodeSearchModel>(model);
            // Search Properties
            searchModel.PrimaryImageFileId = model.PrimaryImageFileId;
            searchModel.PrimaryImageFileCustomKey = model.PrimaryImageFile?.CustomKey;
            searchModel.PrimaryImageFileName = model.PrimaryImageFile?.Name;
            searchModel.PrimaryImageFileDescription = model.PrimaryImageFile?.Description;
            searchModel.SeriesId = model.SeriesId;
            searchModel.SeriesCustomKey = model.Series?.CustomKey;
            searchModel.SeriesName = model.Series?.Name;
            searchModel.SeriesDescription = model.Series?.Description;
            searchModel.HasStaffReview = model.HasStaffReview;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IEpisodeModel model, IEpisode entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // Episode Properties
                && model.HasStaffReview == entity.HasStaffReview
                && model.AirDate == entity.AirDate
                && model.EpisodeCode == entity.EpisodeCode
                && model.SeasonNumber == entity.SeasonNumber
                && model.EpisodeNumber == entity.EpisodeNumber
                // Related Objects
                && model.PrimaryImageFileId == entity.PrimaryImageFileId
                && model.SeriesId == entity.SeriesId
                ;
        }
    }
}
