// <auto-generated>
// <copyright file="Teams.ITeamAliasModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the TeamAlias model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Teams
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class TeamAliasMapperExtensions
    {
        public static ITeamAliasMapper Mapper = new TeamAliasMapper();

        public static void OverrideMapper(ITeamAliasMapper mapper) { Mapper = mapper; }

        public static ITeamAlias MapToEntity(this ITeamAliasModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this ITeamAliasModel model, ref ITeamAlias entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static ITeamAliasModel MapToModel(this ITeamAlias entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static ITeamAliasModel MapToModelLite(this ITeamAlias entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static ITeamAliasModel MapToModelListing(this ITeamAlias entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static ITeamAliasSearchModel MapToSearchModel(this ITeamAliasModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this ITeamAliasModel model, ITeamAlias entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class TeamAliasMapper : ITeamAliasMapper
    {
        public virtual ITeamAlias MapToEntity(ITeamAliasModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<TeamAlias, ITeamAliasModel>(model);
            // TeamAlias Properties
            // <None>
            // Related Objects
            entity.TeamId = model.TeamId;
            entity.Team = (Team)model.Team?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public virtual void MapToEntity(ITeamAliasModel model, ref ITeamAlias entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // TeamAlias Properties
            // <None>
            // Related Objects
            entity.TeamId = model.TeamId;
            entity.Team = (Team)model.Team?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public virtual ITeamAliasModel MapToModel(ITeamAlias entity)
        {
            var model = NameableEntityMapper.MapToModel<ITeamAlias, TeamAliasModel>(entity);
            // TeamAlias Properties
            // <None>
            // Related Objects
            model.TeamId = entity.TeamId;
            model.Team = entity.Team?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public virtual ITeamAliasModel MapToModelLite(ITeamAlias entity)
        {
            var model = NameableEntityMapper.MapToModelLite<ITeamAlias, TeamAliasModel>(entity);
            // TeamAlias Properties
            // <None>
            // Related Objects
            model.TeamId = entity.TeamId;
            // Return Entity
            return model;
        }

        public virtual ITeamAliasModel MapToModelListing(ITeamAlias entity)
        {
            var model = NameableEntityMapper.MapToModelListing<ITeamAlias, TeamAliasModel>(entity);
            // TeamAlias Properties
            // <None>
            // Related Objects
            model.TeamId = entity.TeamId;
            // Return Entity
            return model;
        }

        public virtual ITeamAliasSearchModel MapToSearchModel(ITeamAliasModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<ITeamAliasModel, TeamAliasSearchModel>(model);
            // Search Properties
            searchModel.TeamId = model.TeamId;
            searchModel.TeamCustomKey = model.Team?.CustomKey;
            searchModel.TeamApiDetailUrl = model.Team?.ApiDetailUrl;
            searchModel.TeamSiteDetailUrl = model.Team?.SiteDetailUrl;
            searchModel.TeamName = model.Team?.Name;
            searchModel.TeamShortDescription = model.Team?.ShortDescription;
            searchModel.TeamDescription = model.Team?.Description;
            // Return Search Model
            return searchModel;
        }

        public virtual bool AreEqual(ITeamAliasModel model, ITeamAlias entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // TeamAlias Properties
                // <None>
                // Related Objects
                && model.TeamId == entity.TeamId
                ;
        }
    }
}
