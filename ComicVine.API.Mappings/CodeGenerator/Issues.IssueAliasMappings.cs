// <auto-generated>
// <copyright file="Issues.IIssueAliasModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the IssueAlias model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Issues
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class IssueAliasMapperExtensions
    {
        public static readonly IssueAliasMapper Mapper = new IssueAliasMapper();

        public static IIssueAlias MapToEntity(this IIssueAliasModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IIssueAliasModel model, ref IIssueAlias entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IIssueAliasModel MapToModel(this IIssueAlias entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IIssueAliasModel MapToModelLite(this IIssueAlias entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IIssueAliasModel MapToModelListing(this IIssueAlias entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IIssueAliasSearchModel MapToSearchModel(this IIssueAliasModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IIssueAliasModel model, IIssueAlias entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class IssueAliasMapper : IIssueAliasMapper
    {
        public IIssueAlias MapToEntity(IIssueAliasModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<IssueAlias, IIssueAliasModel>(model);
            // IssueAlias Properties
            // <None>
            // Related Objects
            entity.IssueId = model.IssueId;
            entity.Issue = (Issue)model.Issue?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public void MapToEntity(IIssueAliasModel model, ref IIssueAlias entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // IssueAlias Properties
            // <None>
            // Related Objects
            entity.IssueId = model.IssueId;
            entity.Issue = (Issue)model.Issue?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public IIssueAliasModel MapToModel(IIssueAlias entity)
        {
            var model = NameableEntityMapper.MapToModel<IIssueAlias, IssueAliasModel>(entity);
            // IssueAlias Properties
            // <None>
            // Related Objects
            model.IssueId = entity.IssueId;
            model.Issue = entity.Issue?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public IIssueAliasModel MapToModelLite(IIssueAlias entity)
        {
            var model = NameableEntityMapper.MapToModelLite<IIssueAlias, IssueAliasModel>(entity);
            // IssueAlias Properties
            // <None>
            // Related Objects
            model.IssueId = entity.IssueId;
            // Return Entity
            return model;
        }

        public IIssueAliasModel MapToModelListing(IIssueAlias entity)
        {
            var model = NameableEntityMapper.MapToModelListing<IIssueAlias, IssueAliasModel>(entity);
            // IssueAlias Properties
            // <None>
            // Related Objects
            model.IssueId = entity.IssueId;
            // Return Entity
            return model;
        }

        public IIssueAliasSearchModel MapToSearchModel(IIssueAliasModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<IIssueAliasModel, IssueAliasSearchModel>(model);
            // Search Properties
            searchModel.IssueId = model.IssueId;
            searchModel.IssueCustomKey = model.Issue?.CustomKey;
            searchModel.IssueName = model.Issue?.Name;
            searchModel.IssueDescription = model.Issue?.Description;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IIssueAliasModel model, IIssueAlias entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // IssueAlias Properties
                // <None>
                // Related Objects
                && model.IssueId == entity.IssueId
                ;
        }
    }
}
