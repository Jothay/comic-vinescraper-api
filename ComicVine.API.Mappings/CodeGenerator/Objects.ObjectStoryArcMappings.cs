// <auto-generated>
// <copyright file="Objects.IObjectStoryArcModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the ObjectStoryArc model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Objects
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class ObjectStoryArcMapperExtensions
    {
        public static IObjectStoryArcMapper Mapper = new ObjectStoryArcMapper();

        public static void OverrideMapper(IObjectStoryArcMapper mapper) { Mapper = mapper; }

        public static IObjectStoryArc MapToEntity(this IObjectStoryArcModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IObjectStoryArcModel model, ref IObjectStoryArc entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IObjectStoryArcModel MapToModel(this IObjectStoryArc entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IObjectStoryArcModel MapToModelLite(this IObjectStoryArc entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IObjectStoryArcModel MapToModelListing(this IObjectStoryArc entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IObjectStoryArcSearchModel MapToSearchModel(this IObjectStoryArcModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IObjectStoryArcModel model, IObjectStoryArc entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class ObjectStoryArcMapper : IObjectStoryArcMapper
    {
        public virtual IObjectStoryArc MapToEntity(IObjectStoryArcModel model)
        {
            var entity = EntityMapper.MapToEntity<ObjectStoryArc, IObjectStoryArcModel>(model);
            // ObjectStoryArc Properties
            // <None>
            // Related Objects
            entity.ObjectId = model.ObjectId;
            entity.Object = (Object)model.Object?.MapToEntity();
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public virtual void MapToEntity(IObjectStoryArcModel model, ref IObjectStoryArc entity)
        {
            // Assign Base properties
            EntityMapper.MapToEntity(model, ref entity);
            // ObjectStoryArc Properties
            // <None>
            // Related Objects
            entity.ObjectId = model.ObjectId;
            entity.Object = (Object)model.Object?.MapToEntity();
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public virtual IObjectStoryArcModel MapToModel(IObjectStoryArc entity)
        {
            var model = EntityMapper.MapToModel<IObjectStoryArc, ObjectStoryArcModel>(entity);
            // ObjectStoryArc Properties
            // <None>
            // Related Objects
            model.ObjectId = entity.ObjectId;
            model.Object = entity.Object?.MapToModel();
            model.StoryArcId = entity.StoryArcId;
            model.StoryArc = entity.StoryArc?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public virtual IObjectStoryArcModel MapToModelLite(IObjectStoryArc entity)
        {
            var model = EntityMapper.MapToModelLite<IObjectStoryArc, ObjectStoryArcModel>(entity);
            // ObjectStoryArc Properties
            // <None>
            // Related Objects
            model.ObjectId = entity.ObjectId;
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public virtual IObjectStoryArcModel MapToModelListing(IObjectStoryArc entity)
        {
            var model = EntityMapper.MapToModelListing<IObjectStoryArc, ObjectStoryArcModel>(entity);
            // ObjectStoryArc Properties
            // <None>
            // Related Objects
            model.ObjectId = entity.ObjectId;
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public virtual IObjectStoryArcSearchModel MapToSearchModel(IObjectStoryArcModel model)
        {
            var searchModel = EntityMapper.MapToSearchModel<IObjectStoryArcModel, ObjectStoryArcSearchModel>(model);
            // Search Properties
            searchModel.ObjectId = model.ObjectId;
            searchModel.ObjectCustomKey = model.Object?.CustomKey;
            searchModel.ObjectApiDetailUrl = model.Object?.ApiDetailUrl;
            searchModel.ObjectSiteDetailUrl = model.Object?.SiteDetailUrl;
            searchModel.ObjectName = model.Object?.Name;
            searchModel.ObjectShortDescription = model.Object?.ShortDescription;
            searchModel.ObjectDescription = model.Object?.Description;
            searchModel.StoryArcId = model.StoryArcId;
            searchModel.StoryArcCustomKey = model.StoryArc?.CustomKey;
            searchModel.StoryArcApiDetailUrl = model.StoryArc?.ApiDetailUrl;
            searchModel.StoryArcSiteDetailUrl = model.StoryArc?.SiteDetailUrl;
            searchModel.StoryArcName = model.StoryArc?.Name;
            searchModel.StoryArcShortDescription = model.StoryArc?.ShortDescription;
            searchModel.StoryArcDescription = model.StoryArc?.Description;
            // Return Search Model
            return searchModel;
        }

        public virtual bool AreEqual(IObjectStoryArcModel model, IObjectStoryArc entity)
        {
            return EntityMapper.AreEqual(model, entity)
                // ObjectStoryArc Properties
                // <None>
                // Related Objects
                && model.ObjectId == entity.ObjectId
                && model.StoryArcId == entity.StoryArcId
                ;
        }
    }
}
