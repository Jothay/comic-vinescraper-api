// <auto-generated>
// <copyright file="Characters.ICharacterAliasModel.cs" company="jothay.com">
// Copyright (c) 2015 Jothay Tech, Inc. All rights reserved. ComicVine Original Api Copyright (c) ComicVine a subsidiary of CBS.
// </copyright>
// <summary>Implements the Mapping Layer functions between CharacterAlias and CharacterAliasModel.</summary>
// <remarks>This file was auto-generated using MappingFileMaster.tt in ComicVine.API.Mappings\Mappings\CodeGenerator</remarks>
// </auto-generated>
// ReSharper disable ClassWithVirtualMembersNeverInherited.Global, RedundantUsingDirective, UnusedMember.Global, UnusedMethodReturnValue.Global
namespace ComicVine.API.Mappings//.Characters
{
    using System.CodeDom;
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class CharacterAliasMapperExtensions
    {
        public static ICharacterAliasMapper Mapper = new CharacterAliasMapper();

        public static void OverrideMapper(ICharacterAliasMapper mapper) { Mapper = mapper; }

        public static ICharacterAlias MapToEntity(this ICharacterAliasModel model, int currentDepth = 1)
        {
            return Mapper.MapToEntity(model, currentDepth);
        }
        public static void MapToEntity(this ICharacterAliasModel model, ref ICharacterAlias entity, int currentDepth = 1)
        {
            Mapper.MapToEntity(model, ref entity, currentDepth);
        }
        public static ICharacterAliasModel MapToModel(this ICharacterAlias entity, int currentDepth = 1)
        {
            return Mapper.MapToModel(entity, currentDepth);
        }
        public static ICharacterAliasModel MapToModelLite(this ICharacterAlias entity, int currentDepth = 1)
        {
            return Mapper.MapToModelLite(entity, currentDepth);
        }
        public static ICharacterAliasModel MapToModelListing(this ICharacterAlias entity, int currentDepth = 1)
        {
            return Mapper.MapToModelListing(entity, currentDepth);
        }
        public static ICharacterAliasSearchModel MapToSearchModel(this ICharacterAliasModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this ICharacterAliasModel model, ICharacterAlias entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class CharacterAliasMapper : ICharacterAliasMapper
    {
        public virtual ICharacterAlias MapToEntity(ICharacterAliasModel model, int currentDepth = 1)
        {
            currentDepth++;
            var entity = NameableEntityMapper.MapToEntity<CharacterAlias, ICharacterAliasModel>(model);
            // CharacterAlias Properties
            // <None>
            // Related Objects
            entity.CharacterId = model.CharacterId;
            entity.Character = (Character)model.Character?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public virtual void MapToEntity(ICharacterAliasModel model, ref ICharacterAlias entity, int currentDepth = 1)
        {
            currentDepth++;
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // CharacterAlias Properties
            // <None>
            // Related Objects
            entity.CharacterId = model.CharacterId;
            entity.Character = (Character)model.Character?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public virtual ICharacterAliasModel MapToModel(ICharacterAlias entity, int currentDepth = 1)
        {
            currentDepth++;
            var model = NameableEntityMapper.MapToModel<ICharacterAlias, CharacterAliasModel>(entity);
            // CharacterAlias Properties
            // <None>
            // Related Objects
            model.CharacterId = entity.CharacterId;
            if (currentDepth <= EntityMapperHelper.AllowedMapDepth(typeof(Character)))
            {
                model.Character = entity.Character?.MapToModel(currentDepth);
            }
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public virtual ICharacterAliasModel MapToModelLite(ICharacterAlias entity, int currentDepth = 1)
        {
            currentDepth++;
            var model = NameableEntityMapper.MapToModelLite<ICharacterAlias, CharacterAliasModel>(entity);
            // CharacterAlias Properties
            // <None>
            // Related Objects
            model.CharacterId = entity.CharacterId;
            if (currentDepth <= EntityMapperHelper.AllowedMapLiteDepth(typeof(Character)))
            {
                model.Character = entity.Character?.MapToModelLite(currentDepth);
            }
            // Return Entity
            return model;
        }

        public virtual ICharacterAliasModel MapToModelListing(ICharacterAlias entity, int currentDepth = 1)
        {
            currentDepth++;
            var model = NameableEntityMapper.MapToModelListing<ICharacterAlias, CharacterAliasModel>(entity);
            // CharacterAlias Properties
            // <None>
            // Related Objects
            model.CharacterId = entity.CharacterId;
            if (currentDepth <= EntityMapperHelper.AllowedMapListingDepth(typeof(Character)))
            {
                model.Character = entity.Character?.MapToModelListing(currentDepth);
            }
            // Return Entity
            return model;
        }

        public virtual ICharacterAliasSearchModel MapToSearchModel(ICharacterAliasModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<ICharacterAliasModel, CharacterAliasSearchModel>(model);
            // Search Properties
            searchModel.CharacterId = model.CharacterId;
            searchModel.CharacterCustomKey = model.Character?.CustomKey;
            searchModel.CharacterApiDetailUrl = model.Character?.ApiDetailUrl;
            searchModel.CharacterSiteDetailUrl = model.Character?.SiteDetailUrl;
            searchModel.CharacterName = model.Character?.Name;
            searchModel.CharacterShortDescription = model.Character?.ShortDescription;
            searchModel.CharacterDescription = model.Character?.Description;
            // Return Search Model
            return searchModel;
        }

        public virtual bool AreEqual(ICharacterAliasModel model, ICharacterAlias entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // CharacterAlias Properties
                // <None>
                // Related Objects
                && model.CharacterId == entity.CharacterId
                ;
        }
    }
}
