// <auto-generated>
// <copyright file="dbo.IResourceTypeModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the ResourceType model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.dbo
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class ResourceTypeMapperExtensions
    {
        public static readonly ResourceTypeMapper Mapper = new ResourceTypeMapper();

        public static IResourceType MapToEntity(this IResourceTypeModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IResourceTypeModel model, ref IResourceType entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IResourceTypeModel MapToModel(this IResourceType entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IResourceTypeModel MapToModelLite(this IResourceType entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IResourceTypeModel MapToModelListing(this IResourceType entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IResourceTypeSearchModel MapToSearchModel(this IResourceTypeModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IResourceTypeModel model, IResourceType entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class ResourceTypeMapper : IResourceTypeMapper
    {
        public IResourceType MapToEntity(IResourceTypeModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<ResourceType, IResourceTypeModel>(model);
            // ResourceType Properties
            entity.DetailResourceName = model.DetailResourceName;
            entity.ListResourceName = model.ListResourceName;
            // Related Objects
            // <None>
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public void MapToEntity(IResourceTypeModel model, ref IResourceType entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // ResourceType Properties
            entity.DetailResourceName = model.DetailResourceName;
            entity.ListResourceName = model.ListResourceName;
            // Related Objects
            // <None>
            // Associated Objects
            // <None>
        }

        public IResourceTypeModel MapToModel(IResourceType entity)
        {
            var model = NameableEntityMapper.MapToModel<IResourceType, ResourceTypeModel>(entity);
            // ResourceType Properties
            model.DetailResourceName = entity.DetailResourceName;
            model.ListResourceName = entity.ListResourceName;
            // Related Objects
            // <None>
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public IResourceTypeModel MapToModelLite(IResourceType entity)
        {
            var model = NameableEntityMapper.MapToModelLite<IResourceType, ResourceTypeModel>(entity);
            // ResourceType Properties
            model.DetailResourceName = entity.DetailResourceName;
            model.ListResourceName = entity.ListResourceName;
            // Related Objects
            // <None>
            // Return Entity
            return model;
        }

        public IResourceTypeModel MapToModelListing(IResourceType entity)
        {
            var model = NameableEntityMapper.MapToModelListing<IResourceType, ResourceTypeModel>(entity);
            // ResourceType Properties
            model.DetailResourceName = entity.DetailResourceName;
            model.ListResourceName = entity.ListResourceName;
            // Related Objects
            // <None>
            // Return Entity
            return model;
        }

        public IResourceTypeSearchModel MapToSearchModel(IResourceTypeModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<IResourceTypeModel, ResourceTypeSearchModel>(model);
            // Search Properties
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IResourceTypeModel model, IResourceType entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // ResourceType Properties
                && model.DetailResourceName == entity.DetailResourceName
                && model.ListResourceName == entity.ListResourceName
                // Related Objects
                // <None>
                ;
        }
    }
}
