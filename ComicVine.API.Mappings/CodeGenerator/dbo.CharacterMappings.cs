// <auto-generated>
// <copyright file="dbo.ICharacterModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Character model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.dbo
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class CharacterMapperExtensions
    {
        public static readonly CharacterMapper Mapper = new CharacterMapper();

        public static ICharacter MapToEntity(this ICharacterModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this ICharacterModel model, ref ICharacter entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static ICharacterModel MapToModel(this ICharacter entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static ICharacterModel MapToModelLite(this ICharacter entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static ICharacterModel MapToModelListing(this ICharacter entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static ICharacterSearchModel MapToSearchModel(this ICharacterModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this ICharacterModel model, ICharacter entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class CharacterMapper : ICharacterMapper
    {
        public ICharacter MapToEntity(ICharacterModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<Character, ICharacterModel>(model);
            // Character Properties
            entity.RealName = model.RealName;
            entity.DateOfBirth = model.DateOfBirth;
            // Related Objects
            entity.PrimaryImageId = model.PrimaryImageId;
            entity.PrimaryImage = (ImageFile)model.PrimaryImage.MapToEntity();
            entity.FirstIssueAppearanceId = model.FirstIssueAppearanceId;
            entity.FirstIssueAppearance = (Issue)model.FirstIssueAppearance.MapToEntity();
            entity.GenderId = model.GenderId;
            entity.Gender = (Gender)model.Gender.MapToEntity();
            entity.OriginId = model.OriginId;
            entity.Origin = (Origin)model.Origin.MapToEntity();
            entity.PublisherId = model.PublisherId;
            entity.Publisher = (Publisher)model.Publisher.MapToEntity();
            // Associated Objects
            entity.Creators = model.Creators?.Where(i => i.Active).Select(AuthorMapperExtensions.MapToEntity).Cast<Author>().ToList();
            entity.CharacterAliases = model.CharacterAliases?.Where(i => i.Active).Select(CharacterAliasMapperExtensions.MapToEntity).Cast<CharacterAlias>().ToList();
            entity.Friends = model.Friends?.Where(i => i.Active).Select(CharacterMapperExtensions.MapToEntity).Cast<Character>().ToList();
            entity.Enemies = model.Enemies?.Where(i => i.Active).Select(CharacterMapperExtensions.MapToEntity).Cast<Character>().ToList();
            entity.Teams = model.Teams?.Where(i => i.Active).Select(TeamMapperExtensions.MapToEntity).Cast<Team>().ToList();
            entity.FriendlyTeams = model.FriendlyTeams?.Where(i => i.Active).Select(TeamMapperExtensions.MapToEntity).Cast<Team>().ToList();
            entity.EnemyTeams = model.EnemyTeams?.Where(i => i.Active).Select(TeamMapperExtensions.MapToEntity).Cast<Team>().ToList();
            entity.IssueAppearances = model.IssueAppearances?.Where(i => i.Active).Select(IssueMapperExtensions.MapToEntity).Cast<Issue>().ToList();
            entity.IssuesDiedIn = model.IssuesDiedIn?.Where(i => i.Active).Select(IssueMapperExtensions.MapToEntity).Cast<Issue>().ToList();
            entity.IssueCredits = model.IssueCredits?.Where(i => i.Active).Select(IssueMapperExtensions.MapToEntity).Cast<Issue>().ToList();
            entity.Movies = model.Movies?.Where(i => i.Active).Select(MovieMapperExtensions.MapToEntity).Cast<Movie>().ToList();
            entity.Powers = model.Powers?.Where(i => i.Active).Select(PowerMapperExtensions.MapToEntity).Cast<Power>().ToList();
            entity.StoryArcCredits = model.StoryArcCredits?.Where(i => i.Active).Select(StoryArcMapperExtensions.MapToEntity).Cast<StoryArc>().ToList();
            entity.VolumeCredits = model.VolumeCredits?.Where(i => i.Active).Select(VolumeMapperExtensions.MapToEntity).Cast<Volume>().ToList();
            // Return Entity
            return entity;
        }

        public void MapToEntity(ICharacterModel model, ref ICharacter entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // Character Properties
            entity.RealName = model.RealName;
            entity.DateOfBirth = model.DateOfBirth;
            // Related Objects
            entity.PrimaryImageId = model.PrimaryImageId;
            entity.PrimaryImage = (ImageFile)model.PrimaryImage.MapToEntity();
            entity.FirstIssueAppearanceId = model.FirstIssueAppearanceId;
            entity.FirstIssueAppearance = (Issue)model.FirstIssueAppearance.MapToEntity();
            entity.GenderId = model.GenderId;
            entity.Gender = (Gender)model.Gender.MapToEntity();
            entity.OriginId = model.OriginId;
            entity.Origin = (Origin)model.Origin.MapToEntity();
            entity.PublisherId = model.PublisherId;
            entity.Publisher = (Publisher)model.Publisher.MapToEntity();
            // Associated Objects
            entity.Creators = (ICollection<IAuthor>)model.Creators?.Where(i => i.Active).Select(AuthorMapperExtensions.MapToEntity).Cast<Author>();
            entity.CharacterAliases = (ICollection<ICharacterAlias>)model.CharacterAliases?.Where(i => i.Active).Select(CharacterAliasMapperExtensions.MapToEntity).Cast<CharacterAlias>();
            entity.Friends = (ICollection<ICharacter>)model.Friends?.Where(i => i.Active).Select(CharacterMapperExtensions.MapToEntity).Cast<Character>();
            entity.Enemies = (ICollection<ICharacter>)model.Enemies?.Where(i => i.Active).Select(CharacterMapperExtensions.MapToEntity).Cast<Character>();
            entity.Teams = (ICollection<ITeam>)model.Teams?.Where(i => i.Active).Select(TeamMapperExtensions.MapToEntity).Cast<Team>();
            entity.FriendlyTeams = (ICollection<ITeam>)model.FriendlyTeams?.Where(i => i.Active).Select(TeamMapperExtensions.MapToEntity).Cast<Team>();
            entity.EnemyTeams = (ICollection<ITeam>)model.EnemyTeams?.Where(i => i.Active).Select(TeamMapperExtensions.MapToEntity).Cast<Team>();
            entity.IssueAppearances = (ICollection<IIssue>)model.IssueAppearances?.Where(i => i.Active).Select(IssueMapperExtensions.MapToEntity).Cast<Issue>();
            entity.IssuesDiedIn = (ICollection<IIssue>)model.IssuesDiedIn?.Where(i => i.Active).Select(IssueMapperExtensions.MapToEntity).Cast<Issue>();
            entity.IssueCredits = (ICollection<IIssue>)model.IssueCredits?.Where(i => i.Active).Select(IssueMapperExtensions.MapToEntity).Cast<Issue>();
            entity.Movies = (ICollection<IMovie>)model.Movies?.Where(i => i.Active).Select(MovieMapperExtensions.MapToEntity).Cast<Movie>();
            entity.Powers = (ICollection<IPower>)model.Powers?.Where(i => i.Active).Select(PowerMapperExtensions.MapToEntity).Cast<Power>();
            entity.StoryArcCredits = (ICollection<IStoryArc>)model.StoryArcCredits?.Where(i => i.Active).Select(StoryArcMapperExtensions.MapToEntity).Cast<StoryArc>();
            entity.VolumeCredits = (ICollection<IVolume>)model.VolumeCredits?.Where(i => i.Active).Select(VolumeMapperExtensions.MapToEntity).Cast<Volume>();
        }

        public ICharacterModel MapToModel(ICharacter entity)
        {
            var model = NameableEntityMapper.MapToModel<ICharacter, CharacterModel>(entity);
            // Character Properties
            model.RealName = entity.RealName;
            model.DateOfBirth = entity.DateOfBirth;
            // Related Objects
            model.PrimaryImageId = entity.PrimaryImageId;
            model.PrimaryImage = entity.PrimaryImage.MapToModel();
            model.FirstIssueAppearanceId = entity.FirstIssueAppearanceId;
            model.FirstIssueAppearance = entity.FirstIssueAppearance.MapToModel();
            model.GenderId = entity.GenderId;
            model.Gender = entity.Gender.MapToModel();
            model.OriginId = entity.OriginId;
            model.Origin = entity.Origin.MapToModel();
            model.PublisherId = entity.PublisherId;
            model.Publisher = entity.Publisher.MapToModel();
            // Associated Objects
            model.Creators = entity.Creators?.Where(i => i.Active).Select(AuthorMapperExtensions.MapToModel).ToList();
            model.CharacterAliases = entity.CharacterAliases?.Where(i => i.Active).Select(CharacterAliasMapperExtensions.MapToModel).ToList();
            model.Friends = entity.Friends?.Where(i => i.Active).Select(CharacterMapperExtensions.MapToModel).ToList();
            model.Enemies = entity.Enemies?.Where(i => i.Active).Select(CharacterMapperExtensions.MapToModel).ToList();
            model.Teams = entity.Teams?.Where(i => i.Active).Select(TeamMapperExtensions.MapToModel).ToList();
            model.FriendlyTeams = entity.FriendlyTeams?.Where(i => i.Active).Select(TeamMapperExtensions.MapToModel).ToList();
            model.EnemyTeams = entity.EnemyTeams?.Where(i => i.Active).Select(TeamMapperExtensions.MapToModel).ToList();
            model.IssueAppearances = entity.IssueAppearances?.Where(i => i.Active).Select(IssueMapperExtensions.MapToModel).ToList();
            model.IssuesDiedIn = entity.IssuesDiedIn?.Where(i => i.Active).Select(IssueMapperExtensions.MapToModel).ToList();
            model.IssueCredits = entity.IssueCredits?.Where(i => i.Active).Select(IssueMapperExtensions.MapToModel).ToList();
            model.Movies = entity.Movies?.Where(i => i.Active).Select(MovieMapperExtensions.MapToModel).ToList();
            model.Powers = entity.Powers?.Where(i => i.Active).Select(PowerMapperExtensions.MapToModel).ToList();
            model.StoryArcCredits = entity.StoryArcCredits?.Where(i => i.Active).Select(StoryArcMapperExtensions.MapToModel).ToList();
            model.VolumeCredits = entity.VolumeCredits?.Where(i => i.Active).Select(VolumeMapperExtensions.MapToModel).ToList();
            // Return Entity
            return model;
        }

        public ICharacterModel MapToModelLite(ICharacter entity)
        {
            var model = NameableEntityMapper.MapToModelLite<ICharacter, CharacterModel>(entity);
            // Character Properties
            model.RealName = entity.RealName;
            model.DateOfBirth = entity.DateOfBirth;
            // Related Objects
            model.PrimaryImageId = entity.PrimaryImageId;
            model.FirstIssueAppearanceId = entity.FirstIssueAppearanceId;
            model.GenderId = entity.GenderId;
            model.OriginId = entity.OriginId;
            model.PublisherId = entity.PublisherId;
            // Return Entity
            return model;
        }

        public ICharacterModel MapToModelListing(ICharacter entity)
        {
            var model = NameableEntityMapper.MapToModelListing<ICharacter, CharacterModel>(entity);
            // Character Properties
            model.RealName = entity.RealName;
            model.DateOfBirth = entity.DateOfBirth;
            // Related Objects
            model.PrimaryImageId = entity.PrimaryImageId;
            model.FirstIssueAppearanceId = entity.FirstIssueAppearanceId;
            model.GenderId = entity.GenderId;
            model.OriginId = entity.OriginId;
            model.PublisherId = entity.PublisherId;
            // Return Entity
            return model;
        }

        public ICharacterSearchModel MapToSearchModel(ICharacterModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<ICharacterModel, CharacterSearchModel>(model);
            // Search Properties
            searchModel.PrimaryImageId = model.PrimaryImageId;
            searchModel.PrimaryImageCustomKey = model.PrimaryImage.CustomKey;
            searchModel.PrimaryImageName = model.PrimaryImage.Name;
            searchModel.PrimaryImageDescription = model.PrimaryImage.Description;
            searchModel.FirstIssueAppearanceId = model.FirstIssueAppearanceId;
            searchModel.FirstIssueAppearanceCustomKey = model.FirstIssueAppearance.CustomKey;
            searchModel.FirstIssueAppearanceName = model.FirstIssueAppearance.Name;
            searchModel.FirstIssueAppearanceDescription = model.FirstIssueAppearance.Description;
            searchModel.GenderId = model.GenderId;
            searchModel.GenderCustomKey = model.Gender.CustomKey;
            searchModel.GenderName = model.Gender.Name;
            searchModel.GenderDescription = model.Gender.Description;
            searchModel.OriginId = model.OriginId;
            searchModel.OriginCustomKey = model.Origin.CustomKey;
            searchModel.OriginName = model.Origin.Name;
            searchModel.OriginDescription = model.Origin.Description;
            searchModel.PublisherId = model.PublisherId;
            searchModel.PublisherCustomKey = model.Publisher.CustomKey;
            searchModel.PublisherName = model.Publisher.Name;
            searchModel.PublisherDescription = model.Publisher.Description;
            searchModel.RealName = model.RealName;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(ICharacterModel model, ICharacter entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // Character Properties
                && model.RealName == entity.RealName
                && model.DateOfBirth == entity.DateOfBirth
                // Related Objects
                && model.PrimaryImageId == entity.PrimaryImageId
                && model.FirstIssueAppearanceId == entity.FirstIssueAppearanceId
                && model.GenderId == entity.GenderId
                && model.OriginId == entity.OriginId
                && model.PublisherId == entity.PublisherId
                ;
        }
    }
}
