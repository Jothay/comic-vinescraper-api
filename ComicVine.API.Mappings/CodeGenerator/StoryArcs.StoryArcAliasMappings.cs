// <auto-generated>
// <copyright file="StoryArcs.IStoryArcAliasModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the StoryArcAlias model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.StoryArcs
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class StoryArcAliasMapperExtensions
    {
        public static readonly StoryArcAliasMapper Mapper = new StoryArcAliasMapper();

        public static IStoryArcAlias MapToEntity(this IStoryArcAliasModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IStoryArcAliasModel model, ref IStoryArcAlias entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IStoryArcAliasModel MapToModel(this IStoryArcAlias entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IStoryArcAliasModel MapToModelLite(this IStoryArcAlias entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IStoryArcAliasModel MapToModelListing(this IStoryArcAlias entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IStoryArcAliasSearchModel MapToSearchModel(this IStoryArcAliasModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IStoryArcAliasModel model, IStoryArcAlias entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class StoryArcAliasMapper : IStoryArcAliasMapper
    {
        public IStoryArcAlias MapToEntity(IStoryArcAliasModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<StoryArcAlias, IStoryArcAliasModel>(model);
            // StoryArcAlias Properties
            // <None>
            // Related Objects
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public void MapToEntity(IStoryArcAliasModel model, ref IStoryArcAlias entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // StoryArcAlias Properties
            // <None>
            // Related Objects
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public IStoryArcAliasModel MapToModel(IStoryArcAlias entity)
        {
            var model = NameableEntityMapper.MapToModel<IStoryArcAlias, StoryArcAliasModel>(entity);
            // StoryArcAlias Properties
            // <None>
            // Related Objects
            model.StoryArcId = entity.StoryArcId;
            model.StoryArc = entity.StoryArc?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public IStoryArcAliasModel MapToModelLite(IStoryArcAlias entity)
        {
            var model = NameableEntityMapper.MapToModelLite<IStoryArcAlias, StoryArcAliasModel>(entity);
            // StoryArcAlias Properties
            // <None>
            // Related Objects
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public IStoryArcAliasModel MapToModelListing(IStoryArcAlias entity)
        {
            var model = NameableEntityMapper.MapToModelListing<IStoryArcAlias, StoryArcAliasModel>(entity);
            // StoryArcAlias Properties
            // <None>
            // Related Objects
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public IStoryArcAliasSearchModel MapToSearchModel(IStoryArcAliasModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<IStoryArcAliasModel, StoryArcAliasSearchModel>(model);
            // Search Properties
            searchModel.StoryArcId = model.StoryArcId;
            searchModel.StoryArcCustomKey = model.StoryArc?.CustomKey;
            searchModel.StoryArcName = model.StoryArc?.Name;
            searchModel.StoryArcDescription = model.StoryArc?.Description;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IStoryArcAliasModel model, IStoryArcAlias entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // StoryArcAlias Properties
                // <None>
                // Related Objects
                && model.StoryArcId == entity.StoryArcId
                ;
        }
    }
}
