// <auto-generated>
// <copyright file="Origins.IOriginModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Origin model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Origins
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class OriginMapperExtensions
    {
        public static readonly OriginMapper Mapper = new OriginMapper();

        public static IOrigin MapToEntity(this IOriginModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IOriginModel model, ref IOrigin entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IOriginModel MapToModel(this IOrigin entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IOriginModel MapToModelLite(this IOrigin entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IOriginModel MapToModelListing(this IOrigin entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IOriginSearchModel MapToSearchModel(this IOriginModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IOriginModel model, IOrigin entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class OriginMapper : IOriginMapper
    {
        public IOrigin MapToEntity(IOriginModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<Origin, IOriginModel>(model);
            // Origin Properties
            entity.CharacterSet = model.CharacterSet;
            // Related Objects
            // <None>
            // Associated Objects
            entity.OriginProfiles = model.OriginProfiles?.Where(i => i.Active).Select(OriginProfileMapperExtensions.MapToEntity).Cast<OriginProfile>().ToList();
            // Return Entity
            return entity;
        }

        public void MapToEntity(IOriginModel model, ref IOrigin entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // Origin Properties
            entity.CharacterSet = model.CharacterSet;
            // Related Objects
            // <None>
            // Associated Objects
            entity.OriginProfiles = (ICollection<IOriginProfile>)model.OriginProfiles?.Where(i => i.Active).Select(OriginProfileMapperExtensions.MapToEntity).Cast<OriginProfile>();
        }

        public IOriginModel MapToModel(IOrigin entity)
        {
            var model = NameableEntityMapper.MapToModel<IOrigin, OriginModel>(entity);
            // Origin Properties
            model.CharacterSet = entity.CharacterSet;
            // Related Objects
            // <None>
            // Associated Objects
            model.OriginProfiles = entity.OriginProfiles?.Where(i => i.Active).Select(OriginProfileMapperExtensions.MapToModelLite).ToList();
            // Return Entity
            return model;
        }

        public IOriginModel MapToModelLite(IOrigin entity)
        {
            var model = NameableEntityMapper.MapToModelLite<IOrigin, OriginModel>(entity);
            // Origin Properties
            model.CharacterSet = entity.CharacterSet;
            // Related Objects
            // <None>
            // Return Entity
            return model;
        }

        public IOriginModel MapToModelListing(IOrigin entity)
        {
            var model = NameableEntityMapper.MapToModelListing<IOrigin, OriginModel>(entity);
            // Origin Properties
            model.CharacterSet = entity.CharacterSet;
            // Related Objects
            // <None>
            // Return Entity
            return model;
        }

        public IOriginSearchModel MapToSearchModel(IOriginModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<IOriginModel, OriginSearchModel>(model);
            // Search Properties
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IOriginModel model, IOrigin entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // Origin Properties
                && model.CharacterSet == entity.CharacterSet
                // Related Objects
                // <None>
                ;
        }
    }
}
