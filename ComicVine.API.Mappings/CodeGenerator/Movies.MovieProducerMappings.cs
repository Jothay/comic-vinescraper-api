// <auto-generated>
// <copyright file="Movies.IMovieProducerModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the MovieProducer model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Movies
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class MovieProducerMapperExtensions
    {
        public static IMovieProducerMapper Mapper = new MovieProducerMapper();

        public static void OverrideMapper(IMovieProducerMapper mapper) { Mapper = mapper; }

        public static IMovieProducer MapToEntity(this IMovieProducerModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IMovieProducerModel model, ref IMovieProducer entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IMovieProducerModel MapToModel(this IMovieProducer entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IMovieProducerModel MapToModelLite(this IMovieProducer entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IMovieProducerModel MapToModelListing(this IMovieProducer entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IMovieProducerSearchModel MapToSearchModel(this IMovieProducerModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IMovieProducerModel model, IMovieProducer entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class MovieProducerMapper : IMovieProducerMapper
    {
        public virtual IMovieProducer MapToEntity(IMovieProducerModel model)
        {
            var entity = EntityMapper.MapToEntity<MovieProducer, IMovieProducerModel>(model);
            // MovieProducer Properties
            // <None>
            // Related Objects
            entity.MovieId = model.MovieId;
            entity.Movie = (Movie)model.Movie?.MapToEntity();
            entity.ProducerId = model.ProducerId;
            entity.Producer = (Person)model.Producer?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public virtual void MapToEntity(IMovieProducerModel model, ref IMovieProducer entity)
        {
            // Assign Base properties
            EntityMapper.MapToEntity(model, ref entity);
            // MovieProducer Properties
            // <None>
            // Related Objects
            entity.MovieId = model.MovieId;
            entity.Movie = (Movie)model.Movie?.MapToEntity();
            entity.ProducerId = model.ProducerId;
            entity.Producer = (Person)model.Producer?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public virtual IMovieProducerModel MapToModel(IMovieProducer entity)
        {
            var model = EntityMapper.MapToModel<IMovieProducer, MovieProducerModel>(entity);
            // MovieProducer Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.Movie = entity.Movie?.MapToModel();
            model.ProducerId = entity.ProducerId;
            model.Producer = entity.Producer?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public virtual IMovieProducerModel MapToModelLite(IMovieProducer entity)
        {
            var model = EntityMapper.MapToModelLite<IMovieProducer, MovieProducerModel>(entity);
            // MovieProducer Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.ProducerId = entity.ProducerId;
            // Return Entity
            return model;
        }

        public virtual IMovieProducerModel MapToModelListing(IMovieProducer entity)
        {
            var model = EntityMapper.MapToModelListing<IMovieProducer, MovieProducerModel>(entity);
            // MovieProducer Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.ProducerId = entity.ProducerId;
            // Return Entity
            return model;
        }

        public virtual IMovieProducerSearchModel MapToSearchModel(IMovieProducerModel model)
        {
            var searchModel = EntityMapper.MapToSearchModel<IMovieProducerModel, MovieProducerSearchModel>(model);
            // Search Properties
            searchModel.MovieId = model.MovieId;
            searchModel.MovieCustomKey = model.Movie?.CustomKey;
            searchModel.MovieApiDetailUrl = model.Movie?.ApiDetailUrl;
            searchModel.MovieSiteDetailUrl = model.Movie?.SiteDetailUrl;
            searchModel.MovieName = model.Movie?.Name;
            searchModel.MovieShortDescription = model.Movie?.ShortDescription;
            searchModel.MovieDescription = model.Movie?.Description;
            searchModel.ProducerId = model.ProducerId;
            searchModel.ProducerCustomKey = model.Producer?.CustomKey;
            searchModel.ProducerApiDetailUrl = model.Producer?.ApiDetailUrl;
            searchModel.ProducerSiteDetailUrl = model.Producer?.SiteDetailUrl;
            searchModel.ProducerName = model.Producer?.Name;
            searchModel.ProducerShortDescription = model.Producer?.ShortDescription;
            searchModel.ProducerDescription = model.Producer?.Description;
            // Return Search Model
            return searchModel;
        }

        public virtual bool AreEqual(IMovieProducerModel model, IMovieProducer entity)
        {
            return EntityMapper.AreEqual(model, entity)
                // MovieProducer Properties
                // <None>
                // Related Objects
                && model.MovieId == entity.MovieId
                && model.ProducerId == entity.ProducerId
                ;
        }
    }
}
