// <auto-generated>
// <copyright file="Publishers.IPublisherAliasModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the PublisherAlias model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Publishers
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class PublisherAliasMapperExtensions
    {
        public static readonly PublisherAliasMapper Mapper = new PublisherAliasMapper();

        public static IPublisherAlias MapToEntity(this IPublisherAliasModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IPublisherAliasModel model, ref IPublisherAlias entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IPublisherAliasModel MapToModel(this IPublisherAlias entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IPublisherAliasModel MapToModelLite(this IPublisherAlias entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IPublisherAliasModel MapToModelListing(this IPublisherAlias entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IPublisherAliasSearchModel MapToSearchModel(this IPublisherAliasModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IPublisherAliasModel model, IPublisherAlias entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class PublisherAliasMapper : IPublisherAliasMapper
    {
        public IPublisherAlias MapToEntity(IPublisherAliasModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<PublisherAlias, IPublisherAliasModel>(model);
            // PublisherAlias Properties
            // <None>
            // Related Objects
            entity.PublisherId = model.PublisherId;
            entity.Publisher = (Publisher)model.Publisher?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public void MapToEntity(IPublisherAliasModel model, ref IPublisherAlias entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // PublisherAlias Properties
            // <None>
            // Related Objects
            entity.PublisherId = model.PublisherId;
            entity.Publisher = (Publisher)model.Publisher?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public IPublisherAliasModel MapToModel(IPublisherAlias entity)
        {
            var model = NameableEntityMapper.MapToModel<IPublisherAlias, PublisherAliasModel>(entity);
            // PublisherAlias Properties
            // <None>
            // Related Objects
            model.PublisherId = entity.PublisherId;
            model.Publisher = entity.Publisher?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public IPublisherAliasModel MapToModelLite(IPublisherAlias entity)
        {
            var model = NameableEntityMapper.MapToModelLite<IPublisherAlias, PublisherAliasModel>(entity);
            // PublisherAlias Properties
            // <None>
            // Related Objects
            model.PublisherId = entity.PublisherId;
            // Return Entity
            return model;
        }

        public IPublisherAliasModel MapToModelListing(IPublisherAlias entity)
        {
            var model = NameableEntityMapper.MapToModelListing<IPublisherAlias, PublisherAliasModel>(entity);
            // PublisherAlias Properties
            // <None>
            // Related Objects
            model.PublisherId = entity.PublisherId;
            // Return Entity
            return model;
        }

        public IPublisherAliasSearchModel MapToSearchModel(IPublisherAliasModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<IPublisherAliasModel, PublisherAliasSearchModel>(model);
            // Search Properties
            searchModel.PublisherId = model.PublisherId;
            searchModel.PublisherCustomKey = model.Publisher?.CustomKey;
            searchModel.PublisherName = model.Publisher?.Name;
            searchModel.PublisherDescription = model.Publisher?.Description;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IPublisherAliasModel model, IPublisherAlias entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // PublisherAlias Properties
                // <None>
                // Related Objects
                && model.PublisherId == entity.PublisherId
                ;
        }
    }
}
