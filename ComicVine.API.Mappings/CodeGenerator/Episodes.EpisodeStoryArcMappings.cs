// <auto-generated>
// <copyright file="Episodes.IEpisodeStoryArcModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the EpisodeStoryArc model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Episodes
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class EpisodeStoryArcMapperExtensions
    {
        public static readonly EpisodeStoryArcMapper Mapper = new EpisodeStoryArcMapper();

        public static IEpisodeStoryArc MapToEntity(this IEpisodeStoryArcModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IEpisodeStoryArcModel model, ref IEpisodeStoryArc entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IEpisodeStoryArcModel MapToModel(this IEpisodeStoryArc entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IEpisodeStoryArcModel MapToModelLite(this IEpisodeStoryArc entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IEpisodeStoryArcModel MapToModelListing(this IEpisodeStoryArc entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IEpisodeStoryArcSearchModel MapToSearchModel(this IEpisodeStoryArcModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IEpisodeStoryArcModel model, IEpisodeStoryArc entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class EpisodeStoryArcMapper : IEpisodeStoryArcMapper
    {
        public IEpisodeStoryArc MapToEntity(IEpisodeStoryArcModel model)
        {
            var entity = EntityMapper.MapToEntity<EpisodeStoryArc, IEpisodeStoryArcModel>(model);
            // EpisodeStoryArc Properties
            // <None>
            // Related Objects
            entity.EpisodeId = model.EpisodeId;
            entity.Episode = (Episode)model.Episode?.MapToEntity();
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public void MapToEntity(IEpisodeStoryArcModel model, ref IEpisodeStoryArc entity)
        {
            // Assign Base properties
            EntityMapper.MapToEntity(model, ref entity);
            // EpisodeStoryArc Properties
            // <None>
            // Related Objects
            entity.EpisodeId = model.EpisodeId;
            entity.Episode = (Episode)model.Episode?.MapToEntity();
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public IEpisodeStoryArcModel MapToModel(IEpisodeStoryArc entity)
        {
            var model = EntityMapper.MapToModel<IEpisodeStoryArc, EpisodeStoryArcModel>(entity);
            // EpisodeStoryArc Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.Episode = entity.Episode?.MapToModel();
            model.StoryArcId = entity.StoryArcId;
            model.StoryArc = entity.StoryArc?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public IEpisodeStoryArcModel MapToModelLite(IEpisodeStoryArc entity)
        {
            var model = EntityMapper.MapToModelLite<IEpisodeStoryArc, EpisodeStoryArcModel>(entity);
            // EpisodeStoryArc Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public IEpisodeStoryArcModel MapToModelListing(IEpisodeStoryArc entity)
        {
            var model = EntityMapper.MapToModelListing<IEpisodeStoryArc, EpisodeStoryArcModel>(entity);
            // EpisodeStoryArc Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public IEpisodeStoryArcSearchModel MapToSearchModel(IEpisodeStoryArcModel model)
        {
            var searchModel = EntityMapper.MapToSearchModel<IEpisodeStoryArcModel, EpisodeStoryArcSearchModel>(model);
            // Search Properties
            searchModel.EpisodeId = model.EpisodeId;
            searchModel.EpisodeCustomKey = model.Episode?.CustomKey;
            searchModel.EpisodeName = model.Episode?.Name;
            searchModel.EpisodeDescription = model.Episode?.Description;
            searchModel.StoryArcId = model.StoryArcId;
            searchModel.StoryArcCustomKey = model.StoryArc?.CustomKey;
            searchModel.StoryArcName = model.StoryArc?.Name;
            searchModel.StoryArcDescription = model.StoryArc?.Description;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IEpisodeStoryArcModel model, IEpisodeStoryArc entity)
        {
            return EntityMapper.AreEqual(model, entity)
                // EpisodeStoryArc Properties
                // <None>
                // Related Objects
                && model.EpisodeId == entity.EpisodeId
                && model.StoryArcId == entity.StoryArcId
                ;
        }
    }
}
