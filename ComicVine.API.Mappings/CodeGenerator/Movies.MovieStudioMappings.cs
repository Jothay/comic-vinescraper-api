// <auto-generated>
// <copyright file="Movies.IMovieStudioModel.cs" company="jothay.com">
// Copyright (c) 2015 Jothay Tech, Inc. All rights reserved. ComicVine Original Api Copyright (c) ComicVine a subsidiary of CBS.
// </copyright>
// <summary>Implements the Mapping Layer functions between MovieStudio and MovieStudioModel.</summary>
// <remarks>This file was auto-generated using MappingFileMaster.tt in ComicVine.API.Mappings\Mappings\CodeGenerator</remarks>
// </auto-generated>
// ReSharper disable ClassWithVirtualMembersNeverInherited.Global, RedundantUsingDirective, UnusedMember.Global, UnusedMethodReturnValue.Global
namespace ComicVine.API.Mappings//.Movies
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class MovieStudioMapperExtensions
    {
        public static IMovieStudioMapper Mapper = new MovieStudioMapper();

        public static void OverrideMapper(IMovieStudioMapper mapper) { Mapper = mapper; }

        public static IMovieStudio MapToEntity(this IMovieStudioModel model, int currentDepth = 1)
        {
            return Mapper.MapToEntity(model, currentDepth);
        }
        public static void MapToEntity(this IMovieStudioModel model, ref IMovieStudio entity, int currentDepth = 1)
        {
            Mapper.MapToEntity(model, ref entity, currentDepth);
        }
        public static IMovieStudioModel MapToModel(this IMovieStudio entity, int currentDepth = 1)
        {
            return Mapper.MapToModel(entity, currentDepth);
        }
        public static IMovieStudioModel MapToModelLite(this IMovieStudio entity, int currentDepth = 1)
        {
            return Mapper.MapToModelLite(entity, currentDepth);
        }
        public static IMovieStudioModel MapToModelListing(this IMovieStudio entity, int currentDepth = 1)
        {
            return Mapper.MapToModelListing(entity, currentDepth);
        }
        public static IMovieStudioSearchModel MapToSearchModel(this IMovieStudioModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IMovieStudioModel model, IMovieStudio entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class MovieStudioMapper : IMovieStudioMapper
    {
        public virtual IMovieStudio MapToEntity(IMovieStudioModel model, int currentDepth = 1)
        {
            currentDepth++;
            var entity = EntityMapper.MapToEntity<MovieStudio, IMovieStudioModel>(model);
            // MovieStudio Properties
            // <None>
            // Related Objects
            entity.MovieId = model.MovieId;
            entity.Movie = (Movie)model.Movie?.MapToEntity();
            entity.StudioId = model.StudioId;
            entity.Studio = (Studio)model.Studio?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public virtual void MapToEntity(IMovieStudioModel model, ref IMovieStudio entity, int currentDepth = 1)
        {
            currentDepth++;
            // Assign Base properties
            EntityMapper.MapToEntity(model, ref entity);
            // MovieStudio Properties
            // <None>
            // Related Objects
            entity.MovieId = model.MovieId;
            entity.Movie = (Movie)model.Movie?.MapToEntity();
            entity.StudioId = model.StudioId;
            entity.Studio = (Studio)model.Studio?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public virtual IMovieStudioModel MapToModel(IMovieStudio entity, int currentDepth = 1)
        {
            currentDepth++;
            var model = EntityMapper.MapToModel<IMovieStudio, MovieStudioModel>(entity);
            // MovieStudio Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.Movie = entity.Movie?.MapToModel();
            model.StudioId = entity.StudioId;
            model.Studio = entity.Studio?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public virtual IMovieStudioModel MapToModelLite(IMovieStudio entity, int currentDepth = 1)
        {
            currentDepth++;
            var model = EntityMapper.MapToModelLite<IMovieStudio, MovieStudioModel>(entity);
            // MovieStudio Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.StudioId = entity.StudioId;
            // Return Entity
            return model;
        }

        public virtual IMovieStudioModel MapToModelListing(IMovieStudio entity, int currentDepth = 1)
        {
            currentDepth++;
            var model = EntityMapper.MapToModelListing<IMovieStudio, MovieStudioModel>(entity);
            // MovieStudio Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.StudioId = entity.StudioId;
            // Return Entity
            return model;
        }

        public virtual IMovieStudioSearchModel MapToSearchModel(IMovieStudioModel model)
        {
            var searchModel = EntityMapper.MapToSearchModel<IMovieStudioModel, MovieStudioSearchModel>(model);
            // Search Properties
            searchModel.MovieId = model.MovieId;
            searchModel.MovieCustomKey = model.Movie?.CustomKey;
            searchModel.MovieApiDetailUrl = model.Movie?.ApiDetailUrl;
            searchModel.MovieSiteDetailUrl = model.Movie?.SiteDetailUrl;
            searchModel.MovieName = model.Movie?.Name;
            searchModel.MovieShortDescription = model.Movie?.ShortDescription;
            searchModel.MovieDescription = model.Movie?.Description;
            searchModel.StudioId = model.StudioId;
            searchModel.StudioCustomKey = model.Studio?.CustomKey;
            searchModel.StudioApiDetailUrl = model.Studio?.ApiDetailUrl;
            searchModel.StudioSiteDetailUrl = model.Studio?.SiteDetailUrl;
            searchModel.StudioName = model.Studio?.Name;
            searchModel.StudioShortDescription = model.Studio?.ShortDescription;
            searchModel.StudioDescription = model.Studio?.Description;
            // Return Search Model
            return searchModel;
        }

        public virtual bool AreEqual(IMovieStudioModel model, IMovieStudio entity)
        {
            return EntityMapper.AreEqual(model, entity)
                // MovieStudio Properties
                // <None>
                // Related Objects
                && model.MovieId == entity.MovieId
                && model.StudioId == entity.StudioId
                ;
        }
    }
}
