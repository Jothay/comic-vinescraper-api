// <auto-generated>
// <copyright file="Episodes.IEpisodeCharacterDiedModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the EpisodeCharacterDied model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Episodes
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class EpisodeCharacterDiedMapperExtensions
    {
        public static IEpisodeCharacterDiedMapper Mapper = new EpisodeCharacterDiedMapper();

        public static void OverrideMapper(IEpisodeCharacterDiedMapper mapper) { Mapper = mapper; }

        public static IEpisodeCharacterDied MapToEntity(this IEpisodeCharacterDiedModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IEpisodeCharacterDiedModel model, ref IEpisodeCharacterDied entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IEpisodeCharacterDiedModel MapToModel(this IEpisodeCharacterDied entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IEpisodeCharacterDiedModel MapToModelLite(this IEpisodeCharacterDied entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IEpisodeCharacterDiedModel MapToModelListing(this IEpisodeCharacterDied entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IEpisodeCharacterDiedSearchModel MapToSearchModel(this IEpisodeCharacterDiedModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IEpisodeCharacterDiedModel model, IEpisodeCharacterDied entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class EpisodeCharacterDiedMapper : IEpisodeCharacterDiedMapper
    {
        public virtual IEpisodeCharacterDied MapToEntity(IEpisodeCharacterDiedModel model)
        {
            var entity = EntityMapper.MapToEntity<EpisodeCharacterDied, IEpisodeCharacterDiedModel>(model);
            // EpisodeCharacterDied Properties
            // <None>
            // Related Objects
            entity.EpisodeId = model.EpisodeId;
            entity.Episode = (Episode)model.Episode?.MapToEntity();
            entity.CharacterId = model.CharacterId;
            entity.Character = (Character)model.Character?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public virtual void MapToEntity(IEpisodeCharacterDiedModel model, ref IEpisodeCharacterDied entity)
        {
            // Assign Base properties
            EntityMapper.MapToEntity(model, ref entity);
            // EpisodeCharacterDied Properties
            // <None>
            // Related Objects
            entity.EpisodeId = model.EpisodeId;
            entity.Episode = (Episode)model.Episode?.MapToEntity();
            entity.CharacterId = model.CharacterId;
            entity.Character = (Character)model.Character?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public virtual IEpisodeCharacterDiedModel MapToModel(IEpisodeCharacterDied entity)
        {
            var model = EntityMapper.MapToModel<IEpisodeCharacterDied, EpisodeCharacterDiedModel>(entity);
            // EpisodeCharacterDied Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.Episode = entity.Episode?.MapToModel();
            model.CharacterId = entity.CharacterId;
            model.Character = entity.Character?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public virtual IEpisodeCharacterDiedModel MapToModelLite(IEpisodeCharacterDied entity)
        {
            var model = EntityMapper.MapToModelLite<IEpisodeCharacterDied, EpisodeCharacterDiedModel>(entity);
            // EpisodeCharacterDied Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.CharacterId = entity.CharacterId;
            // Return Entity
            return model;
        }

        public virtual IEpisodeCharacterDiedModel MapToModelListing(IEpisodeCharacterDied entity)
        {
            var model = EntityMapper.MapToModelListing<IEpisodeCharacterDied, EpisodeCharacterDiedModel>(entity);
            // EpisodeCharacterDied Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.CharacterId = entity.CharacterId;
            // Return Entity
            return model;
        }

        public virtual IEpisodeCharacterDiedSearchModel MapToSearchModel(IEpisodeCharacterDiedModel model)
        {
            var searchModel = EntityMapper.MapToSearchModel<IEpisodeCharacterDiedModel, EpisodeCharacterDiedSearchModel>(model);
            // Search Properties
            searchModel.EpisodeId = model.EpisodeId;
            searchModel.EpisodeCustomKey = model.Episode?.CustomKey;
            searchModel.EpisodeApiDetailUrl = model.Episode?.ApiDetailUrl;
            searchModel.EpisodeSiteDetailUrl = model.Episode?.SiteDetailUrl;
            searchModel.EpisodeName = model.Episode?.Name;
            searchModel.EpisodeShortDescription = model.Episode?.ShortDescription;
            searchModel.EpisodeDescription = model.Episode?.Description;
            searchModel.CharacterId = model.CharacterId;
            searchModel.CharacterCustomKey = model.Character?.CustomKey;
            searchModel.CharacterApiDetailUrl = model.Character?.ApiDetailUrl;
            searchModel.CharacterSiteDetailUrl = model.Character?.SiteDetailUrl;
            searchModel.CharacterName = model.Character?.Name;
            searchModel.CharacterShortDescription = model.Character?.ShortDescription;
            searchModel.CharacterDescription = model.Character?.Description;
            // Return Search Model
            return searchModel;
        }

        public virtual bool AreEqual(IEpisodeCharacterDiedModel model, IEpisodeCharacterDied entity)
        {
            return EntityMapper.AreEqual(model, entity)
                // EpisodeCharacterDied Properties
                // <None>
                // Related Objects
                && model.EpisodeId == entity.EpisodeId
                && model.CharacterId == entity.CharacterId
                ;
        }
    }
}
