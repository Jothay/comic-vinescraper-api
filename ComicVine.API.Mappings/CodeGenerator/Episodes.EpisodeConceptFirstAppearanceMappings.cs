// <auto-generated>
// <copyright file="Episodes.IEpisodeConceptFirstAppearanceModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the EpisodeConceptFirstAppearance model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Episodes
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class EpisodeConceptFirstAppearanceMapperExtensions
    {
        public static readonly EpisodeConceptFirstAppearanceMapper Mapper = new EpisodeConceptFirstAppearanceMapper();

        public static IEpisodeConceptFirstAppearance MapToEntity(this IEpisodeConceptFirstAppearanceModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IEpisodeConceptFirstAppearanceModel model, ref IEpisodeConceptFirstAppearance entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IEpisodeConceptFirstAppearanceModel MapToModel(this IEpisodeConceptFirstAppearance entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IEpisodeConceptFirstAppearanceModel MapToModelLite(this IEpisodeConceptFirstAppearance entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IEpisodeConceptFirstAppearanceModel MapToModelListing(this IEpisodeConceptFirstAppearance entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IEpisodeConceptFirstAppearanceSearchModel MapToSearchModel(this IEpisodeConceptFirstAppearanceModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IEpisodeConceptFirstAppearanceModel model, IEpisodeConceptFirstAppearance entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class EpisodeConceptFirstAppearanceMapper : IEpisodeConceptFirstAppearanceMapper
    {
        public IEpisodeConceptFirstAppearance MapToEntity(IEpisodeConceptFirstAppearanceModel model)
        {
            var entity = EntityMapper.MapToEntity<EpisodeConceptFirstAppearance, IEpisodeConceptFirstAppearanceModel>(model);
            // EpisodeConceptFirstAppearance Properties
            // <None>
            // Related Objects
            entity.EpisodeId = model.EpisodeId;
            entity.Episode = (Episode)model.Episode?.MapToEntity();
            entity.ConceptId = model.ConceptId;
            entity.Concept = (Concept)model.Concept?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public void MapToEntity(IEpisodeConceptFirstAppearanceModel model, ref IEpisodeConceptFirstAppearance entity)
        {
            // Assign Base properties
            EntityMapper.MapToEntity(model, ref entity);
            // EpisodeConceptFirstAppearance Properties
            // <None>
            // Related Objects
            entity.EpisodeId = model.EpisodeId;
            entity.Episode = (Episode)model.Episode?.MapToEntity();
            entity.ConceptId = model.ConceptId;
            entity.Concept = (Concept)model.Concept?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public IEpisodeConceptFirstAppearanceModel MapToModel(IEpisodeConceptFirstAppearance entity)
        {
            var model = EntityMapper.MapToModel<IEpisodeConceptFirstAppearance, EpisodeConceptFirstAppearanceModel>(entity);
            // EpisodeConceptFirstAppearance Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.Episode = entity.Episode?.MapToModel();
            model.ConceptId = entity.ConceptId;
            model.Concept = entity.Concept?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public IEpisodeConceptFirstAppearanceModel MapToModelLite(IEpisodeConceptFirstAppearance entity)
        {
            var model = EntityMapper.MapToModelLite<IEpisodeConceptFirstAppearance, EpisodeConceptFirstAppearanceModel>(entity);
            // EpisodeConceptFirstAppearance Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.ConceptId = entity.ConceptId;
            // Return Entity
            return model;
        }

        public IEpisodeConceptFirstAppearanceModel MapToModelListing(IEpisodeConceptFirstAppearance entity)
        {
            var model = EntityMapper.MapToModelListing<IEpisodeConceptFirstAppearance, EpisodeConceptFirstAppearanceModel>(entity);
            // EpisodeConceptFirstAppearance Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.ConceptId = entity.ConceptId;
            // Return Entity
            return model;
        }

        public IEpisodeConceptFirstAppearanceSearchModel MapToSearchModel(IEpisodeConceptFirstAppearanceModel model)
        {
            var searchModel = EntityMapper.MapToSearchModel<IEpisodeConceptFirstAppearanceModel, EpisodeConceptFirstAppearanceSearchModel>(model);
            // Search Properties
            searchModel.EpisodeId = model.EpisodeId;
            searchModel.EpisodeCustomKey = model.Episode?.CustomKey;
            searchModel.EpisodeName = model.Episode?.Name;
            searchModel.EpisodeDescription = model.Episode?.Description;
            searchModel.ConceptId = model.ConceptId;
            searchModel.ConceptCustomKey = model.Concept?.CustomKey;
            searchModel.ConceptName = model.Concept?.Name;
            searchModel.ConceptDescription = model.Concept?.Description;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IEpisodeConceptFirstAppearanceModel model, IEpisodeConceptFirstAppearance entity)
        {
            return EntityMapper.AreEqual(model, entity)
                // EpisodeConceptFirstAppearance Properties
                // <None>
                // Related Objects
                && model.EpisodeId == entity.EpisodeId
                && model.ConceptId == entity.ConceptId
                ;
        }
    }
}
