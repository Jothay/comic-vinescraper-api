// <auto-generated>
// <copyright file="Studios.IStudioModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Studio model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Studios
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class StudioMapperExtensions
    {
        public static IStudioMapper Mapper = new StudioMapper();

        public static void OverrideMapper(IStudioMapper mapper) { Mapper = mapper; }

        public static IStudio MapToEntity(this IStudioModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IStudioModel model, ref IStudio entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IStudioModel MapToModel(this IStudio entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IStudioModel MapToModelLite(this IStudio entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IStudioModel MapToModelListing(this IStudio entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IStudioSearchModel MapToSearchModel(this IStudioModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IStudioModel model, IStudio entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class StudioMapper : IStudioMapper
    {
        public virtual IStudio MapToEntity(IStudioModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<Studio, IStudioModel>(model);
            // Studio Properties
            // <None>
            // Related Objects
            // <None>
            // Associated Objects
            entity.MovieStudios = model.MovieStudios?.Where(i => i.Active).Select(MovieStudioMapperExtensions.MapToEntity).Cast<MovieStudio>().ToList();
            // Return Entity
            return entity;
        }

        public virtual void MapToEntity(IStudioModel model, ref IStudio entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // Studio Properties
            // <None>
            // Related Objects
            // <None>
            // Associated Objects
            entity.MovieStudios = model.MovieStudios?.Where(i => i.Active).Select(MovieStudioMapperExtensions.MapToEntity).ToList();
        }

        public virtual IStudioModel MapToModel(IStudio entity)
        {
            var model = NameableEntityMapper.MapToModel<IStudio, StudioModel>(entity);
            // Studio Properties
            // <None>
            // Related Objects
            // <None>
            // Associated Objects
            model.MovieStudios = entity.MovieStudios?.Where(i => i.Active).Select(MovieStudioMapperExtensions.MapToModelLite).ToList();
            // Return Entity
            return model;
        }

        public virtual IStudioModel MapToModelLite(IStudio entity)
        {
            var model = NameableEntityMapper.MapToModelLite<IStudio, StudioModel>(entity);
            // Studio Properties
            // <None>
            // Related Objects
            // <None>
            // Return Entity
            return model;
        }

        public virtual IStudioModel MapToModelListing(IStudio entity)
        {
            var model = NameableEntityMapper.MapToModelListing<IStudio, StudioModel>(entity);
            // Studio Properties
            // <None>
            // Related Objects
            // <None>
            // Return Entity
            return model;
        }

        public virtual IStudioSearchModel MapToSearchModel(IStudioModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<IStudioModel, StudioSearchModel>(model);
            // Search Properties
            // Return Search Model
            return searchModel;
        }

        public virtual bool AreEqual(IStudioModel model, IStudio entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // Studio Properties
                // <None>
                // Related Objects
                // <None>
                ;
        }
    }
}
