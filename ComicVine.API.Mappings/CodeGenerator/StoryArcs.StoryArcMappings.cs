// <auto-generated>
// <copyright file="StoryArcs.IStoryArcModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the StoryArc model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.StoryArcs
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class StoryArcMapperExtensions
    {
        public static readonly StoryArcMapper Mapper = new StoryArcMapper();

        public static IStoryArc MapToEntity(this IStoryArcModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IStoryArcModel model, ref IStoryArc entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IStoryArcModel MapToModel(this IStoryArc entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IStoryArcModel MapToModelLite(this IStoryArc entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IStoryArcModel MapToModelListing(this IStoryArc entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IStoryArcSearchModel MapToSearchModel(this IStoryArcModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IStoryArcModel model, IStoryArc entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class StoryArcMapper : IStoryArcMapper
    {
        public IStoryArc MapToEntity(IStoryArcModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<StoryArc, IStoryArcModel>(model);
            // StoryArc Properties
            // <None>
            // Related Objects
            entity.PrimaryImageFileId = model.PrimaryImageFileId;
            entity.PrimaryImageFile = (ImageFile)model.PrimaryImageFile?.MapToEntity();
            entity.FirstIssueAppearanceId = model.FirstIssueAppearanceId;
            entity.FirstIssueAppearance = (Issue)model.FirstIssueAppearance?.MapToEntity();
            entity.PublisherId = model.PublisherId;
            entity.Publisher = (Publisher)model.Publisher?.MapToEntity();
            // Associated Objects
            entity.MovieStoryArcs = model.MovieStoryArcs?.Where(i => i.Active).Select(MovieStoryArcMapperExtensions.MapToEntity).Cast<MovieStoryArc>().ToList();
            entity.StoryArcAliases = model.StoryArcAliases?.Where(i => i.Active).Select(StoryArcAliasMapperExtensions.MapToEntity).Cast<StoryArcAlias>().ToList();
            entity.StoryArcIssues = model.StoryArcIssues?.Where(i => i.Active).Select(StoryArcIssueMapperExtensions.MapToEntity).Cast<StoryArcIssue>().ToList();
            entity.StoryArcsWritten = model.StoryArcsWritten?.Where(i => i.Active).Select(StoryArcWriterMapperExtensions.MapToEntity).Cast<StoryArcWriter>().ToList();
            // Return Entity
            return entity;
        }

        public void MapToEntity(IStoryArcModel model, ref IStoryArc entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // StoryArc Properties
            // <None>
            // Related Objects
            entity.PrimaryImageFileId = model.PrimaryImageFileId;
            entity.PrimaryImageFile = (ImageFile)model.PrimaryImageFile?.MapToEntity();
            entity.FirstIssueAppearanceId = model.FirstIssueAppearanceId;
            entity.FirstIssueAppearance = (Issue)model.FirstIssueAppearance?.MapToEntity();
            entity.PublisherId = model.PublisherId;
            entity.Publisher = (Publisher)model.Publisher?.MapToEntity();
            // Associated Objects
            entity.MovieStoryArcs = (ICollection<IMovieStoryArc>)model.MovieStoryArcs?.Where(i => i.Active).Select(MovieStoryArcMapperExtensions.MapToEntity).Cast<MovieStoryArc>();
            entity.StoryArcAliases = (ICollection<IStoryArcAlias>)model.StoryArcAliases?.Where(i => i.Active).Select(StoryArcAliasMapperExtensions.MapToEntity).Cast<StoryArcAlias>();
            entity.StoryArcIssues = (ICollection<IStoryArcIssue>)model.StoryArcIssues?.Where(i => i.Active).Select(StoryArcIssueMapperExtensions.MapToEntity).Cast<StoryArcIssue>();
            entity.StoryArcsWritten = (ICollection<IStoryArcWriter>)model.StoryArcsWritten?.Where(i => i.Active).Select(StoryArcWriterMapperExtensions.MapToEntity).Cast<StoryArcWriter>();
        }

        public IStoryArcModel MapToModel(IStoryArc entity)
        {
            var model = NameableEntityMapper.MapToModel<IStoryArc, StoryArcModel>(entity);
            // StoryArc Properties
            // <None>
            // Related Objects
            model.PrimaryImageFileId = entity.PrimaryImageFileId;
            model.PrimaryImageFile = entity.PrimaryImageFile?.MapToModel();
            model.FirstIssueAppearanceId = entity.FirstIssueAppearanceId;
            model.FirstIssueAppearance = entity.FirstIssueAppearance?.MapToModel();
            model.PublisherId = entity.PublisherId;
            model.Publisher = entity.Publisher?.MapToModel();
            // Associated Objects
            model.MovieStoryArcs = entity.MovieStoryArcs?.Where(i => i.Active).Select(MovieStoryArcMapperExtensions.MapToModelLite).ToList();
            model.StoryArcAliases = entity.StoryArcAliases?.Where(i => i.Active).Select(StoryArcAliasMapperExtensions.MapToModelLite).ToList();
            model.StoryArcIssues = entity.StoryArcIssues?.Where(i => i.Active).Select(StoryArcIssueMapperExtensions.MapToModelLite).ToList();
            model.StoryArcsWritten = entity.StoryArcsWritten?.Where(i => i.Active).Select(StoryArcWriterMapperExtensions.MapToModelLite).ToList();
            // Return Entity
            return model;
        }

        public IStoryArcModel MapToModelLite(IStoryArc entity)
        {
            var model = NameableEntityMapper.MapToModelLite<IStoryArc, StoryArcModel>(entity);
            // StoryArc Properties
            // <None>
            // Related Objects
            model.PrimaryImageFileId = entity.PrimaryImageFileId;
            model.FirstIssueAppearanceId = entity.FirstIssueAppearanceId;
            model.PublisherId = entity.PublisherId;
            // Return Entity
            return model;
        }

        public IStoryArcModel MapToModelListing(IStoryArc entity)
        {
            var model = NameableEntityMapper.MapToModelListing<IStoryArc, StoryArcModel>(entity);
            // StoryArc Properties
            // <None>
            // Related Objects
            model.PrimaryImageFileId = entity.PrimaryImageFileId;
            model.FirstIssueAppearanceId = entity.FirstIssueAppearanceId;
            model.PublisherId = entity.PublisherId;
            // Return Entity
            return model;
        }

        public IStoryArcSearchModel MapToSearchModel(IStoryArcModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<IStoryArcModel, StoryArcSearchModel>(model);
            // Search Properties
            searchModel.PrimaryImageFileId = model.PrimaryImageFileId;
            searchModel.PrimaryImageFileCustomKey = model.PrimaryImageFile?.CustomKey;
            searchModel.PrimaryImageFileName = model.PrimaryImageFile?.Name;
            searchModel.PrimaryImageFileDescription = model.PrimaryImageFile?.Description;
            searchModel.FirstIssueAppearanceId = model.FirstIssueAppearanceId;
            searchModel.FirstIssueAppearanceCustomKey = model.FirstIssueAppearance?.CustomKey;
            searchModel.FirstIssueAppearanceName = model.FirstIssueAppearance?.Name;
            searchModel.FirstIssueAppearanceDescription = model.FirstIssueAppearance?.Description;
            searchModel.PublisherId = model.PublisherId;
            searchModel.PublisherCustomKey = model.Publisher?.CustomKey;
            searchModel.PublisherName = model.Publisher?.Name;
            searchModel.PublisherDescription = model.Publisher?.Description;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IStoryArcModel model, IStoryArc entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // StoryArc Properties
                // <None>
                // Related Objects
                && model.PrimaryImageFileId == entity.PrimaryImageFileId
                && model.FirstIssueAppearanceId == entity.FirstIssueAppearanceId
                && model.PublisherId == entity.PublisherId
                ;
        }
    }
}
