// <auto-generated>
// <copyright file="Movies.IMovieStoryArcModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the MovieStoryArc model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Movies
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class MovieStoryArcMapperExtensions
    {
        public static readonly MovieStoryArcMapper Mapper = new MovieStoryArcMapper();

        public static IMovieStoryArc MapToEntity(this IMovieStoryArcModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IMovieStoryArcModel model, ref IMovieStoryArc entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IMovieStoryArcModel MapToModel(this IMovieStoryArc entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IMovieStoryArcModel MapToModelLite(this IMovieStoryArc entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IMovieStoryArcModel MapToModelListing(this IMovieStoryArc entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IMovieStoryArcSearchModel MapToSearchModel(this IMovieStoryArcModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IMovieStoryArcModel model, IMovieStoryArc entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class MovieStoryArcMapper : IMovieStoryArcMapper
    {
        public IMovieStoryArc MapToEntity(IMovieStoryArcModel model)
        {
            var entity = EntityMapper.MapToEntity<MovieStoryArc, IMovieStoryArcModel>(model);
            // MovieStoryArc Properties
            // <None>
            // Related Objects
            entity.MovieId = model.MovieId;
            entity.Movie = (Movie)model.Movie?.MapToEntity();
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public void MapToEntity(IMovieStoryArcModel model, ref IMovieStoryArc entity)
        {
            // Assign Base properties
            EntityMapper.MapToEntity(model, ref entity);
            // MovieStoryArc Properties
            // <None>
            // Related Objects
            entity.MovieId = model.MovieId;
            entity.Movie = (Movie)model.Movie?.MapToEntity();
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public IMovieStoryArcModel MapToModel(IMovieStoryArc entity)
        {
            var model = EntityMapper.MapToModel<IMovieStoryArc, MovieStoryArcModel>(entity);
            // MovieStoryArc Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.Movie = entity.Movie?.MapToModel();
            model.StoryArcId = entity.StoryArcId;
            model.StoryArc = entity.StoryArc?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public IMovieStoryArcModel MapToModelLite(IMovieStoryArc entity)
        {
            var model = EntityMapper.MapToModelLite<IMovieStoryArc, MovieStoryArcModel>(entity);
            // MovieStoryArc Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public IMovieStoryArcModel MapToModelListing(IMovieStoryArc entity)
        {
            var model = EntityMapper.MapToModelListing<IMovieStoryArc, MovieStoryArcModel>(entity);
            // MovieStoryArc Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public IMovieStoryArcSearchModel MapToSearchModel(IMovieStoryArcModel model)
        {
            var searchModel = EntityMapper.MapToSearchModel<IMovieStoryArcModel, MovieStoryArcSearchModel>(model);
            // Search Properties
            searchModel.MovieId = model.MovieId;
            searchModel.MovieCustomKey = model.Movie?.CustomKey;
            searchModel.MovieName = model.Movie?.Name;
            searchModel.MovieDescription = model.Movie?.Description;
            searchModel.StoryArcId = model.StoryArcId;
            searchModel.StoryArcCustomKey = model.StoryArc?.CustomKey;
            searchModel.StoryArcName = model.StoryArc?.Name;
            searchModel.StoryArcDescription = model.StoryArc?.Description;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IMovieStoryArcModel model, IMovieStoryArc entity)
        {
            return EntityMapper.AreEqual(model, entity)
                // MovieStoryArc Properties
                // <None>
                // Related Objects
                && model.MovieId == entity.MovieId
                && model.StoryArcId == entity.StoryArcId
                ;
        }
    }
}
