// <auto-generated>
// <copyright file="dbo.IAuthorModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Author model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.dbo
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class AuthorMapperExtensions
    {
        public static readonly AuthorMapper Mapper = new AuthorMapper();

        public static IAuthor MapToEntity(this IAuthorModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IAuthorModel model, ref IAuthor entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IAuthorModel MapToModel(this IAuthor entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IAuthorModel MapToModelLite(this IAuthor entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IAuthorModel MapToModelListing(this IAuthor entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IAuthorSearchModel MapToSearchModel(this IAuthorModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IAuthorModel model, IAuthor entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class AuthorMapper : IAuthorMapper
    {
        public IAuthor MapToEntity(IAuthorModel model)
        {
            var entity = NameableEntityMapper.MapToEntity<Author, IAuthorModel>(model);
            // Author Properties
            // <None>
            // Related Objects
            // <None>
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public void MapToEntity(IAuthorModel model, ref IAuthor entity)
        {
            // Assign Base properties
            NameableEntityMapper.MapToEntity(model, ref entity);
            // Author Properties
            // <None>
            // Related Objects
            // <None>
            // Associated Objects
            // <None>
        }

        public IAuthorModel MapToModel(IAuthor entity)
        {
            var model = NameableEntityMapper.MapToModel<IAuthor, AuthorModel>(entity);
            // Author Properties
            // <None>
            // Related Objects
            // <None>
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public IAuthorModel MapToModelLite(IAuthor entity)
        {
            var model = NameableEntityMapper.MapToModelLite<IAuthor, AuthorModel>(entity);
            // Author Properties
            // <None>
            // Related Objects
            // <None>
            // Return Entity
            return model;
        }

        public IAuthorModel MapToModelListing(IAuthor entity)
        {
            var model = NameableEntityMapper.MapToModelListing<IAuthor, AuthorModel>(entity);
            // Author Properties
            // <None>
            // Related Objects
            // <None>
            // Return Entity
            return model;
        }

        public IAuthorSearchModel MapToSearchModel(IAuthorModel model)
        {
            var searchModel = NameableEntityMapper.MapToSearchModel<IAuthorModel, AuthorSearchModel>(model);
            // Search Properties
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IAuthorModel model, IAuthor entity)
        {
            return NameableEntityMapper.AreEqual(model, entity)
                // Author Properties
                // <None>
                // Related Objects
                // <None>
                ;
        }
    }
}
