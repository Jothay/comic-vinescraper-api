// <auto-generated>
// <copyright file="Movies.IMovieCharacterModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the MovieCharacter model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Mappings//.Movies
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class MovieCharacterMapperExtensions
    {
        public static readonly MovieCharacterMapper Mapper = new MovieCharacterMapper();

        public static IMovieCharacter MapToEntity(this IMovieCharacterModel model)
        {
            return Mapper.MapToEntity(model);
        }
        public static void MapToEntity(this IMovieCharacterModel model, ref IMovieCharacter entity)
        {
            Mapper.MapToEntity(model, ref entity);
        }
        public static IMovieCharacterModel MapToModel(this IMovieCharacter entity)
        {
            return Mapper.MapToModel(entity);
        }
        public static IMovieCharacterModel MapToModelLite(this IMovieCharacter entity)
        {
            return Mapper.MapToModelLite(entity);
        }
        public static IMovieCharacterModel MapToModelListing(this IMovieCharacter entity)
        {
            return Mapper.MapToModelListing(entity);
        }
        public static IMovieCharacterSearchModel MapToSearchModel(this IMovieCharacterModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IMovieCharacterModel model, IMovieCharacter entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class MovieCharacterMapper : IMovieCharacterMapper
    {
        public IMovieCharacter MapToEntity(IMovieCharacterModel model)
        {
            var entity = EntityMapper.MapToEntity<MovieCharacter, IMovieCharacterModel>(model);
            // MovieCharacter Properties
            // <None>
            // Related Objects
            entity.MovieId = model.MovieId;
            entity.Movie = (Movie)model.Movie?.MapToEntity();
            entity.CharacterId = model.CharacterId;
            entity.Character = (Character)model.Character?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public void MapToEntity(IMovieCharacterModel model, ref IMovieCharacter entity)
        {
            // Assign Base properties
            EntityMapper.MapToEntity(model, ref entity);
            // MovieCharacter Properties
            // <None>
            // Related Objects
            entity.MovieId = model.MovieId;
            entity.Movie = (Movie)model.Movie?.MapToEntity();
            entity.CharacterId = model.CharacterId;
            entity.Character = (Character)model.Character?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public IMovieCharacterModel MapToModel(IMovieCharacter entity)
        {
            var model = EntityMapper.MapToModel<IMovieCharacter, MovieCharacterModel>(entity);
            // MovieCharacter Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.Movie = entity.Movie?.MapToModel();
            model.CharacterId = entity.CharacterId;
            model.Character = entity.Character?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public IMovieCharacterModel MapToModelLite(IMovieCharacter entity)
        {
            var model = EntityMapper.MapToModelLite<IMovieCharacter, MovieCharacterModel>(entity);
            // MovieCharacter Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.CharacterId = entity.CharacterId;
            // Return Entity
            return model;
        }

        public IMovieCharacterModel MapToModelListing(IMovieCharacter entity)
        {
            var model = EntityMapper.MapToModelListing<IMovieCharacter, MovieCharacterModel>(entity);
            // MovieCharacter Properties
            // <None>
            // Related Objects
            model.MovieId = entity.MovieId;
            model.CharacterId = entity.CharacterId;
            // Return Entity
            return model;
        }

        public IMovieCharacterSearchModel MapToSearchModel(IMovieCharacterModel model)
        {
            var searchModel = EntityMapper.MapToSearchModel<IMovieCharacterModel, MovieCharacterSearchModel>(model);
            // Search Properties
            searchModel.MovieId = model.MovieId;
            searchModel.MovieCustomKey = model.Movie?.CustomKey;
            searchModel.MovieName = model.Movie?.Name;
            searchModel.MovieDescription = model.Movie?.Description;
            searchModel.CharacterId = model.CharacterId;
            searchModel.CharacterCustomKey = model.Character?.CustomKey;
            searchModel.CharacterName = model.Character?.Name;
            searchModel.CharacterDescription = model.Character?.Description;
            // Return Search Model
            return searchModel;
        }

        public bool AreEqual(IMovieCharacterModel model, IMovieCharacter entity)
        {
            return EntityMapper.AreEqual(model, entity)
                // MovieCharacter Properties
                // <None>
                // Related Objects
                && model.MovieId == entity.MovieId
                && model.CharacterId == entity.CharacterId
                ;
        }
    }
}
