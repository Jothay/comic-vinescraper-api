// <auto-generated>
// <copyright file="dbo.ICharacterModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Character model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>

namespace ComicVine.API.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;

    public partial class CharacterModel : NameableEntityModel, ICharacterModel
    {
        // Character Properties
        public string RealName { get; set; }
        public DateTime? DateOfBirth { get; set; }
        // Related Objects
        public int PrimaryImageId { get; set; }
        public IImageFileModel PrimaryImage { get; set; }
        public int FirstIssueAppearanceId { get; set; }
        public IIssueModel FirstIssueAppearance { get; set; }
        public int GenderId { get; set; }
        public IGenderModel Gender { get; set; }
        public int OriginId { get; set; }
        public IOriginModel Origin { get; set; }
        public int PublisherId { get; set; }
        public IPublisherModel Publisher { get; set; }
        // Associated Objects
        public List<IAuthorModel> Creators { get; set; }
        public List<ICharacterAliasModel> CharacterAliases { get; set; }
        public List<ICharacterModel> Friends { get; set; }
        public List<ICharacterModel> Enemies { get; set; }
        public List<ITeamModel> Teams { get; set; }
        public List<ITeamModel> FriendlyTeams { get; set; }
        public List<ITeamModel> EnemyTeams { get; set; }
        public List<IIssueModel> IssueAppearances { get; set; }
        public List<IIssueModel> IssuesDiedIn { get; set; }
        public List<IIssueModel> IssueCredits { get; set; }
        public List<IMovieModel> Movies { get; set; }
        public List<IPowerModel> Powers { get; set; }
        public List<IStoryArcModel> StoryArcCredits { get; set; }
        public List<IVolumeModel> VolumeCredits { get; set; }
    }
}

namespace ComicVine.API.SearchModels
{
    public partial class CharacterSearchModel : NameableEntitySearchModel, Interfaces.SearchModels.ICharacterSearchModel
    {
        [ServiceStack.ApiMember(Name = "PrimaryImageId", IsRequired = false, Description = "Filter by the Related PrimaryImageId")]
        public int? PrimaryImageId { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageCustomKey", IsRequired = false, Description = "Filter by the Related PrimaryImage CustomKey (Equals, Case-Insensitive)")]
        public string PrimaryImageCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageApiDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImage Api Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageSiteDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImage Site Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageName", IsRequired = false, Description = "Filter by the Related PrimaryImage Name (Contains, Case-Insensitive)")]
        public string PrimaryImageName { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageShortDescription", IsRequired = false, Description = "Filter by the Related PrimaryImage Short Description (Contains, Case-Insensitive)")]
        public string PrimaryImageShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageDescription", IsRequired = false, Description = "Filter by the Related PrimaryImage Description (Contains, Case-Insensitive)")]
        public string PrimaryImageDescription { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueAppearanceId", IsRequired = false, Description = "Filter by the Related FirstIssueAppearanceId")]
        public int? FirstIssueAppearanceId { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueAppearanceCustomKey", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance CustomKey (Equals, Case-Insensitive)")]
        public string FirstIssueAppearanceCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueAppearanceApiDetailUrl", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Api Detail Url (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueAppearanceSiteDetailUrl", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Site Detail Url (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueAppearanceName", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Name (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceName { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueAppearanceShortDescription", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Short Description (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueAppearanceDescription", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Description (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceDescription { get; set; }

        [ServiceStack.ApiMember(Name = "GenderId", IsRequired = false, Description = "Filter by the Related GenderId")]
        public int? GenderId { get; set; }

        [ServiceStack.ApiMember(Name = "GenderCustomKey", IsRequired = false, Description = "Filter by the Related Gender CustomKey (Equals, Case-Insensitive)")]
        public string GenderCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "GenderApiDetailUrl", IsRequired = false, Description = "Filter by the Related Gender Api Detail Url (Contains, Case-Insensitive)")]
        public string GenderApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "GenderSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Gender Site Detail Url (Contains, Case-Insensitive)")]
        public string GenderSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "GenderName", IsRequired = false, Description = "Filter by the Related Gender Name (Contains, Case-Insensitive)")]
        public string GenderName { get; set; }

        [ServiceStack.ApiMember(Name = "GenderShortDescription", IsRequired = false, Description = "Filter by the Related Gender Short Description (Contains, Case-Insensitive)")]
        public string GenderShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "GenderDescription", IsRequired = false, Description = "Filter by the Related Gender Description (Contains, Case-Insensitive)")]
        public string GenderDescription { get; set; }

        [ServiceStack.ApiMember(Name = "OriginId", IsRequired = false, Description = "Filter by the Related OriginId")]
        public int? OriginId { get; set; }

        [ServiceStack.ApiMember(Name = "OriginCustomKey", IsRequired = false, Description = "Filter by the Related Origin CustomKey (Equals, Case-Insensitive)")]
        public string OriginCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "OriginApiDetailUrl", IsRequired = false, Description = "Filter by the Related Origin Api Detail Url (Contains, Case-Insensitive)")]
        public string OriginApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "OriginSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Origin Site Detail Url (Contains, Case-Insensitive)")]
        public string OriginSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "OriginName", IsRequired = false, Description = "Filter by the Related Origin Name (Contains, Case-Insensitive)")]
        public string OriginName { get; set; }

        [ServiceStack.ApiMember(Name = "OriginShortDescription", IsRequired = false, Description = "Filter by the Related Origin Short Description (Contains, Case-Insensitive)")]
        public string OriginShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "OriginDescription", IsRequired = false, Description = "Filter by the Related Origin Description (Contains, Case-Insensitive)")]
        public string OriginDescription { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherId", IsRequired = false, Description = "Filter by the Related PublisherId")]
        public int? PublisherId { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherCustomKey", IsRequired = false, Description = "Filter by the Related Publisher CustomKey (Equals, Case-Insensitive)")]
        public string PublisherCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherApiDetailUrl", IsRequired = false, Description = "Filter by the Related Publisher Api Detail Url (Contains, Case-Insensitive)")]
        public string PublisherApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Publisher Site Detail Url (Contains, Case-Insensitive)")]
        public string PublisherSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherName", IsRequired = false, Description = "Filter by the Related Publisher Name (Contains, Case-Insensitive)")]
        public string PublisherName { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherShortDescription", IsRequired = false, Description = "Filter by the Related Publisher Short Description (Contains, Case-Insensitive)")]
        public string PublisherShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherDescription", IsRequired = false, Description = "Filter by the Related Publisher Description (Contains, Case-Insensitive)")]
        public string PublisherDescription { get; set; }

        [ServiceStack.ApiMember(Name = "RealName", IsRequired = false, Description = "The RealName to search by. (Contains, Case-Insensitive)")]
        public string RealName { get; set; }

    }
}
