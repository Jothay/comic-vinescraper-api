// <auto-generated>
// <copyright file="Movies.IMovieModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Movie model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;

    public partial class MovieModel : NameableEntityModel, IMovieModel
    {
        // Movie Properties
        public bool HasStaffReview { get; set; }
        public string Distributor { get; set; }
        public decimal? BoxOfficeRevenue { get; set; }
        public decimal? TotalRevenue { get; set; }
        public decimal? Budget { get; set; }
        public decimal? Rating { get; set; }
        public DateTime? ReleaseDate { get; set; }
        public decimal? RunTime { get; set; }
        // Related Objects
        public int? PrimaryImageFileId { get; set; }
        public IImageFileModel PrimaryImageFile { get; set; }
        // Associated Objects
        public List<IMovieCharacterModel> MovieCharacters { get; set; }
        public List<IMovieConceptModel> MovieConcepts { get; set; }
        public List<IMovieLocationModel> MovieLocations { get; set; }
        public List<IMovieObjectModel> MovieObjects { get; set; }
        public List<IMovieProducerModel> MovieProducers { get; set; }
        public List<IMovieStoryArcModel> MovieStoryArcs { get; set; }
        public List<IMovieStudioModel> MovieStudios { get; set; }
        public List<IMovieTeamModel> MovieTeams { get; set; }
        public List<IMovieWriterModel> MovieWriters { get; set; }
    }
}

namespace ComicVine.API.SearchModels
{
    public partial class MovieSearchModel : NameableEntitySearchModel, Interfaces.SearchModels.IMovieSearchModel
    {
        [ServiceStack.ApiMember(Name = "PrimaryImageFileId", IsRequired = false, Description = "Filter by the Related PrimaryImageFileId")]
        public int? PrimaryImageFileId { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileCustomKey", IsRequired = false, Description = "Filter by the Related PrimaryImageFile CustomKey (Equals, Case-Insensitive)")]
        public string PrimaryImageFileCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileApiDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Api Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageFileApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileSiteDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Site Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageFileSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileName", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Name (Contains, Case-Insensitive)")]
        public string PrimaryImageFileName { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileShortDescription", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Short Description (Contains, Case-Insensitive)")]
        public string PrimaryImageFileShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileDescription", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Description (Contains, Case-Insensitive)")]
        public string PrimaryImageFileDescription { get; set; }

        [ServiceStack.ApiMember(Name = "HasStaffReview", IsRequired = false, Description = "The HasStaffReview to search by.")]
        public bool? HasStaffReview { get; set; }

        [ServiceStack.ApiMember(Name = "Distributor", IsRequired = false, Description = "The Distributor to search by. (Contains, Case-Insensitive)")]
        public string Distributor { get; set; }

    }
}
