// <auto-generated>
// <copyright file="Promos.IPromoModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Promo model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;

    public partial class PromoModel : NameableEntityModel, IPromoModel
    {
        // Promo Properties
        public string Link { get; set; }
        // Related Objects
        public int PrimaryImageFileId { get; set; }
        public IImageFileModel PrimaryImageFile { get; set; }
        public int AuthorId { get; set; }
        public IPersonModel Author { get; set; }
        public int? ResourceTypeId { get; set; }
        public IResourceTypeModel ResourceType { get; set; }
        // Associated Objects
        // <None>
    }
}

namespace ComicVine.API.SearchModels
{
    public partial class PromoSearchModel : NameableEntitySearchModel, Interfaces.SearchModels.IPromoSearchModel
    {
        [ServiceStack.ApiMember(Name = "PrimaryImageFileId", IsRequired = false, Description = "Filter by the Related PrimaryImageFileId")]
        public int? PrimaryImageFileId { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileCustomKey", IsRequired = false, Description = "Filter by the Related PrimaryImageFile CustomKey (Equals, Case-Insensitive)")]
        public string PrimaryImageFileCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileApiDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Api Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageFileApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileSiteDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Site Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageFileSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileName", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Name (Contains, Case-Insensitive)")]
        public string PrimaryImageFileName { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileShortDescription", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Short Description (Contains, Case-Insensitive)")]
        public string PrimaryImageFileShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileDescription", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Description (Contains, Case-Insensitive)")]
        public string PrimaryImageFileDescription { get; set; }

        [ServiceStack.ApiMember(Name = "AuthorId", IsRequired = false, Description = "Filter by the Related AuthorId")]
        public int? AuthorId { get; set; }

        [ServiceStack.ApiMember(Name = "AuthorCustomKey", IsRequired = false, Description = "Filter by the Related Author CustomKey (Equals, Case-Insensitive)")]
        public string AuthorCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "AuthorApiDetailUrl", IsRequired = false, Description = "Filter by the Related Author Api Detail Url (Contains, Case-Insensitive)")]
        public string AuthorApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "AuthorSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Author Site Detail Url (Contains, Case-Insensitive)")]
        public string AuthorSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "AuthorName", IsRequired = false, Description = "Filter by the Related Author Name (Contains, Case-Insensitive)")]
        public string AuthorName { get; set; }

        [ServiceStack.ApiMember(Name = "AuthorShortDescription", IsRequired = false, Description = "Filter by the Related Author Short Description (Contains, Case-Insensitive)")]
        public string AuthorShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "AuthorDescription", IsRequired = false, Description = "Filter by the Related Author Description (Contains, Case-Insensitive)")]
        public string AuthorDescription { get; set; }

        [ServiceStack.ApiMember(Name = "ResourceTypeId", IsRequired = false, Description = "Filter by the Related ResourceTypeId")]
        public int? ResourceTypeId { get; set; }

        [ServiceStack.ApiMember(Name = "ResourceTypeCustomKey", IsRequired = false, Description = "Filter by the Related ResourceType CustomKey (Equals, Case-Insensitive)")]
        public string ResourceTypeCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "ResourceTypeApiDetailUrl", IsRequired = false, Description = "Filter by the Related ResourceType Api Detail Url (Contains, Case-Insensitive)")]
        public string ResourceTypeApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "ResourceTypeSiteDetailUrl", IsRequired = false, Description = "Filter by the Related ResourceType Site Detail Url (Contains, Case-Insensitive)")]
        public string ResourceTypeSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "ResourceTypeName", IsRequired = false, Description = "Filter by the Related ResourceType Name (Contains, Case-Insensitive)")]
        public string ResourceTypeName { get; set; }

        [ServiceStack.ApiMember(Name = "ResourceTypeShortDescription", IsRequired = false, Description = "Filter by the Related ResourceType Short Description (Contains, Case-Insensitive)")]
        public string ResourceTypeShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "ResourceTypeDescription", IsRequired = false, Description = "Filter by the Related ResourceType Description (Contains, Case-Insensitive)")]
        public string ResourceTypeDescription { get; set; }

    }
}
