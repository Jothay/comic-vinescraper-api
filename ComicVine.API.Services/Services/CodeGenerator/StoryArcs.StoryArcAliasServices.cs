// <auto-generated>
// <copyright file="StoryArcs.IStoryArcAliasModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the StoryArcAlias model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Services//.StoryArcs
{
    using System;
    using System.Collections.Generic;
    using Interfaces.BusinessWorkflows;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using ServiceStack;

    public class StoryArcAliasModelBase : NameableEntityModelBase, IStoryArcAliasModel
    {
        // StoryArcAlias Properties
        // <None>
        // Related Objects
        public int StoryArcId { get; set; }
        public IStoryArcModel StoryArc { get; set; }
        // Associated Objects
        // <None>
    }
    public class StoryArcAliasSearchModelBase : NameableEntitySearchModelBase, IStoryArcAliasSearchModel
    {
        [ApiMember(Name = "StoryArcId", IsRequired = false, Description = "Filter by the Related StoryArcId")]
        public int? StoryArcId { get; set; }

        [ApiMember(Name = "StoryArcCustomKey", IsRequired = false, Description = "Filter by the Related StoryArc CustomKey (Equals, Case-Insensitive)")]
        public string StoryArcCustomKey { get; set; }

        [ApiMember(Name = "StoryArcApiDetailUrl", IsRequired = false, Description = "Filter by the Related StoryArc Api Detail Url (Contains, Case-Insensitive)")]
        public string StoryArcApiDetailUrl { get; set; }

        [ApiMember(Name = "StoryArcSiteDetailUrl", IsRequired = false, Description = "Filter by the Related StoryArc Site Detail Url (Contains, Case-Insensitive)")]
        public string StoryArcSiteDetailUrl { get; set; }

        [ApiMember(Name = "StoryArcName", IsRequired = false, Description = "Filter by the Related StoryArc Name (Contains, Case-Insensitive)")]
        public string StoryArcName { get; set; }

        [ApiMember(Name = "StoryArcShortDescription", IsRequired = false, Description = "Filter by the Related StoryArc Short Description (Contains, Case-Insensitive)")]
        public string StoryArcShortDescription { get; set; }

        [ApiMember(Name = "StoryArcDescription", IsRequired = false, Description = "Filter by the Related StoryArc Description (Contains, Case-Insensitive)")]
        public string StoryArcDescription { get; set; }

    }

    [Route("/StoryArcAliases/", "GET", Summary = "Gets All Active StoryArcAliases")]
    public class GetStoryArcAliases : StoryArcAliasSearchModelBase, IReturn<List<IStoryArcAliasModel>> { }

    [Route("/StoryArcAliases/Listing", "GET", Summary = "Gets All Active StoryArcAliases with the mininum header information")]
    public class GetStoryArcAliasesAsListing : StoryArcAliasSearchModelBase, IReturn<List<IStoryArcAliasModel>> { }

    [Route("/StoryArcAliases/{ID}", "GET", Summary = "Gets StoryArcAlias by Identifier")]
    public class GetStoryArcAlias : ImplementsID, IReturn<IStoryArcAliasModel> { }

    [Route("/StoryArcAliases/{CustomKey}/ByKey", "GET", Summary = "Gets StoryArcAlias by Key")]
    public class GetStoryArcAliasByKey : ImplementsKey, IReturn<IStoryArcAliasModel> { }

    //[Authenticate]
    [Route("/StoryArcAliases/Create", "POST", Summary = "Creates an StoryArcAlias with these contents")]
    public class CreateStoryArcAlias : StoryArcAliasModelBase, IReturn<IStoryArcAliasModel> { }

    //[Authenticate]
    [Route("/StoryArcAliases/Update", "POST", Summary = "Updates an StoryArcAlias with new contents")]
    public class UpdateStoryArcAlias : StoryArcAliasModelBase, IReturn<IStoryArcAliasModel> { }

    //[Authenticate]
    [Route("/StoryArcAliases/{ID}/Deactivate", "POST", Summary = "Deactivates an StoryArcAlias by Identifier")]
    public class DeactivateStoryArcAlias : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/StoryArcAliases/{CustomKey}/DeactivateByKey", "POST", Summary = "Deactivates an StoryArcAlias by Key")]
    public class DeactivateStoryArcAliasByKey : ImplementsKey, IReturn<bool> { }

    //[Authenticate]
    [Route("/StoryArcAliases/{ID}/Remove", "POST", Summary = "Removes an StoryArcAlias by Identifier")]
    public class RemoveStoryArcAlias : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/StoryArcAliases/{CustomKey}/RemoveByKey", "POST", Summary = "Removes an StoryArcAlias by Key")]
    public class RemoveStoryArcAliasByKey : ImplementsKey, IReturn<bool> { }

    public interface IStoryArcAliasesServices
    {
        List<IStoryArcAliasModel> Any(GetStoryArcAliases request);
        List<IStoryArcAliasModel> Any(GetStoryArcAliasesAsListing request);
        IStoryArcAliasModel Any(GetStoryArcAlias request);
        IStoryArcAliasModel Any(GetStoryArcAliasByKey request);
        IStoryArcAliasModel Any(CreateStoryArcAlias request);
        IStoryArcAliasModel Any(UpdateStoryArcAlias request);
        bool Any(DeactivateStoryArcAlias request);
        bool Any(DeactivateStoryArcAliasByKey request);
        bool Any(RemoveStoryArcAlias request);
        bool Any(RemoveStoryArcAliasByKey request);
    }

    public class StoryArcAliasesServices : Service, IStoryArcAliasesServices
    {
        private readonly IStoryArcAliasesBusinessWorkflow workflow;

        public StoryArcAliasesServices(IStoryArcAliasesBusinessWorkflow workflow)
        {
            this.workflow = workflow;
        }

        public List<IStoryArcAliasModel> Any(GetStoryArcAliases request) { return workflow.Search(request); }
        public List<IStoryArcAliasModel> Any(GetStoryArcAliasesAsListing request) { return workflow.Search(request, true); }
        public IStoryArcAliasModel Any(GetStoryArcAlias request) { return workflow.Get(request.ID); }
        public IStoryArcAliasModel Any(GetStoryArcAliasByKey request) { return workflow.Get(request.CustomKey); }
        public IStoryArcAliasModel Any(CreateStoryArcAlias request) { return workflow.Create(request); }
        public IStoryArcAliasModel Any(UpdateStoryArcAlias request) { return workflow.Update(request); }
        public bool Any(DeactivateStoryArcAlias request) { return workflow.Deactivate(request.ID); }
        public bool Any(DeactivateStoryArcAliasByKey request) { return workflow.Deactivate(request.CustomKey); }
        public bool Any(RemoveStoryArcAlias request) { return workflow.Remove(request.ID); }
        public bool Any(RemoveStoryArcAliasByKey request) { return workflow.Remove(request.CustomKey); }
    }
}
