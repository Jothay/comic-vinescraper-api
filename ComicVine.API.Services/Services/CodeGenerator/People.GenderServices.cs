// <auto-generated>
// <copyright file="People.IGenderModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Gender model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Services//.People
{
    using System;
    using System.Collections.Generic;
    using Interfaces.BusinessWorkflows;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using ServiceStack;

    public class GenderModelBase : NameableEntityModelBase, IGenderModel
    {
        // Gender Properties
        // <None>
        // Related Objects
        // <None>
        // Associated Objects
        public List<ICharacterModel> Characters { get; set; }
        public List<IPersonModel> People { get; set; }
    }
    public class GenderSearchModelBase : NameableEntitySearchModelBase, IGenderSearchModel
    {
        // No Gender Search Properties
    }

    [Route("/Genders/", "GET", Summary = "Gets All Active Genders")]
    public class GetGenders : GenderSearchModelBase, IReturn<List<IGenderModel>> { }

    [Route("/Genders/Listing", "GET", Summary = "Gets All Active Genders with the mininum header information")]
    public class GetGendersAsListing : GenderSearchModelBase, IReturn<List<IGenderModel>> { }

    [Route("/Genders/{ID}", "GET", Summary = "Gets Gender by Identifier")]
    public class GetGender : ImplementsID, IReturn<IGenderModel> { }

    [Route("/Genders/{CustomKey}/ByKey", "GET", Summary = "Gets Gender by Key")]
    public class GetGenderByKey : ImplementsKey, IReturn<IGenderModel> { }

    //[Authenticate]
    [Route("/Genders/Create", "POST", Summary = "Creates an Gender with these contents")]
    public class CreateGender : GenderModelBase, IReturn<IGenderModel> { }

    //[Authenticate]
    [Route("/Genders/Update", "POST", Summary = "Updates an Gender with new contents")]
    public class UpdateGender : GenderModelBase, IReturn<IGenderModel> { }

    //[Authenticate]
    [Route("/Genders/{ID}/Deactivate", "POST", Summary = "Deactivates an Gender by Identifier")]
    public class DeactivateGender : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/Genders/{CustomKey}/DeactivateByKey", "POST", Summary = "Deactivates an Gender by Key")]
    public class DeactivateGenderByKey : ImplementsKey, IReturn<bool> { }

    //[Authenticate]
    [Route("/Genders/{ID}/Remove", "POST", Summary = "Removes an Gender by Identifier")]
    public class RemoveGender : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/Genders/{CustomKey}/RemoveByKey", "POST", Summary = "Removes an Gender by Key")]
    public class RemoveGenderByKey : ImplementsKey, IReturn<bool> { }

    public interface IGendersServices
    {
        List<IGenderModel> Any(GetGenders request);
        List<IGenderModel> Any(GetGendersAsListing request);
        IGenderModel Any(GetGender request);
        IGenderModel Any(GetGenderByKey request);
        IGenderModel Any(CreateGender request);
        IGenderModel Any(UpdateGender request);
        bool Any(DeactivateGender request);
        bool Any(DeactivateGenderByKey request);
        bool Any(RemoveGender request);
        bool Any(RemoveGenderByKey request);
    }

    public class GendersServices : /*ServicesBase,*/ IGendersServices
    {
        private readonly IGendersBusinessWorkflow workflow;

        public GendersServices(IGendersBusinessWorkflow workflow)
        {
            this.workflow = workflow;
        }

        public List<IGenderModel> Any(GetGenders request) { return workflow.Search(request); }
        public List<IGenderModel> Any(GetGendersAsListing request) { return workflow.Search(request, true); }
        public IGenderModel Any(GetGender request) { return workflow.Get(request.ID); }
        public IGenderModel Any(GetGenderByKey request) { return workflow.Get(request.CustomKey); }
        public IGenderModel Any(CreateGender request) { return workflow.Create(request); }
        public IGenderModel Any(UpdateGender request) { return workflow.Update(request); }
        public bool Any(DeactivateGender request) { return workflow.Deactivate(request.ID); }
        public bool Any(DeactivateGenderByKey request) { return workflow.Deactivate(request.CustomKey); }
        public bool Any(RemoveGender request) { return workflow.Remove(request.ID); }
        public bool Any(RemoveGenderByKey request) { return workflow.Remove(request.CustomKey); }
    }
}
