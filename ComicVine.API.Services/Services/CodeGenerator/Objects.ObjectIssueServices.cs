// <auto-generated>
// <copyright file="Objects.IObjectIssueModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the ObjectIssue model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Services//.Objects
{
    using System;
    using System.Collections.Generic;
    using Interfaces.BusinessWorkflows;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using ServiceStack;

    public class ObjectIssueModelBase : NameableEntityModelBase, IObjectIssueModel
    {
        // ObjectIssue Properties
        // <None>
        // Related Objects
        public int ObjectId { get; set; }
        public IObjectModel Object { get; set; }
        public int IssueId { get; set; }
        public IIssueModel Issue { get; set; }
        // Associated Objects
        // <None>
    }
    public class ObjectIssueSearchModelBase : NameableEntitySearchModelBase, IObjectIssueSearchModel
    {
        [ApiMember(Name = "ObjectId", IsRequired = false, Description = "Filter by the Related ObjectId")]
        public int? ObjectId { get; set; }

        [ApiMember(Name = "ObjectCustomKey", IsRequired = false, Description = "Filter by the Related Object CustomKey (Equals, Case-Insensitive)")]
        public string ObjectCustomKey { get; set; }

        [ApiMember(Name = "ObjectApiDetailUrl", IsRequired = false, Description = "Filter by the Related Object Api Detail Url (Contains, Case-Insensitive)")]
        public string ObjectApiDetailUrl { get; set; }

        [ApiMember(Name = "ObjectSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Object Site Detail Url (Contains, Case-Insensitive)")]
        public string ObjectSiteDetailUrl { get; set; }

        [ApiMember(Name = "ObjectName", IsRequired = false, Description = "Filter by the Related Object Name (Contains, Case-Insensitive)")]
        public string ObjectName { get; set; }

        [ApiMember(Name = "ObjectShortDescription", IsRequired = false, Description = "Filter by the Related Object Short Description (Contains, Case-Insensitive)")]
        public string ObjectShortDescription { get; set; }

        [ApiMember(Name = "ObjectDescription", IsRequired = false, Description = "Filter by the Related Object Description (Contains, Case-Insensitive)")]
        public string ObjectDescription { get; set; }

        [ApiMember(Name = "IssueId", IsRequired = false, Description = "Filter by the Related IssueId")]
        public int? IssueId { get; set; }

        [ApiMember(Name = "IssueCustomKey", IsRequired = false, Description = "Filter by the Related Issue CustomKey (Equals, Case-Insensitive)")]
        public string IssueCustomKey { get; set; }

        [ApiMember(Name = "IssueApiDetailUrl", IsRequired = false, Description = "Filter by the Related Issue Api Detail Url (Contains, Case-Insensitive)")]
        public string IssueApiDetailUrl { get; set; }

        [ApiMember(Name = "IssueSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Issue Site Detail Url (Contains, Case-Insensitive)")]
        public string IssueSiteDetailUrl { get; set; }

        [ApiMember(Name = "IssueName", IsRequired = false, Description = "Filter by the Related Issue Name (Contains, Case-Insensitive)")]
        public string IssueName { get; set; }

        [ApiMember(Name = "IssueShortDescription", IsRequired = false, Description = "Filter by the Related Issue Short Description (Contains, Case-Insensitive)")]
        public string IssueShortDescription { get; set; }

        [ApiMember(Name = "IssueDescription", IsRequired = false, Description = "Filter by the Related Issue Description (Contains, Case-Insensitive)")]
        public string IssueDescription { get; set; }

    }

    [Route("/ObjectIssues/", "GET", Summary = "Gets All Active ObjectIssues")]
    public class GetObjectIssues : ObjectIssueSearchModelBase, IReturn<List<IObjectIssueModel>> { }

    [Route("/ObjectIssues/Listing", "GET", Summary = "Gets All Active ObjectIssues with the mininum header information")]
    public class GetObjectIssuesAsListing : ObjectIssueSearchModelBase, IReturn<List<IObjectIssueModel>> { }

    [Route("/ObjectIssues/{ID}", "GET", Summary = "Gets ObjectIssue by Identifier")]
    public class GetObjectIssue : ImplementsID, IReturn<IObjectIssueModel> { }

    [Route("/ObjectIssues/{CustomKey}/ByKey", "GET", Summary = "Gets ObjectIssue by Key")]
    public class GetObjectIssueByKey : ImplementsKey, IReturn<IObjectIssueModel> { }

    //[Authenticate]
    [Route("/ObjectIssues/Create", "POST", Summary = "Creates an ObjectIssue with these contents")]
    public class CreateObjectIssue : ObjectIssueModelBase, IReturn<IObjectIssueModel> { }

    //[Authenticate]
    [Route("/ObjectIssues/Update", "POST", Summary = "Updates an ObjectIssue with new contents")]
    public class UpdateObjectIssue : ObjectIssueModelBase, IReturn<IObjectIssueModel> { }

    //[Authenticate]
    [Route("/ObjectIssues/{ID}/Deactivate", "POST", Summary = "Deactivates an ObjectIssue by Identifier")]
    public class DeactivateObjectIssue : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/ObjectIssues/{CustomKey}/DeactivateByKey", "POST", Summary = "Deactivates an ObjectIssue by Key")]
    public class DeactivateObjectIssueByKey : ImplementsKey, IReturn<bool> { }

    //[Authenticate]
    [Route("/ObjectIssues/{ID}/Remove", "POST", Summary = "Removes an ObjectIssue by Identifier")]
    public class RemoveObjectIssue : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/ObjectIssues/{CustomKey}/RemoveByKey", "POST", Summary = "Removes an ObjectIssue by Key")]
    public class RemoveObjectIssueByKey : ImplementsKey, IReturn<bool> { }

    public interface IObjectIssuesServices
    {
        List<IObjectIssueModel> Any(GetObjectIssues request);
        List<IObjectIssueModel> Any(GetObjectIssuesAsListing request);
        IObjectIssueModel Any(GetObjectIssue request);
        IObjectIssueModel Any(GetObjectIssueByKey request);
        IObjectIssueModel Any(CreateObjectIssue request);
        IObjectIssueModel Any(UpdateObjectIssue request);
        bool Any(DeactivateObjectIssue request);
        bool Any(DeactivateObjectIssueByKey request);
        bool Any(RemoveObjectIssue request);
        bool Any(RemoveObjectIssueByKey request);
    }

    public class ObjectIssuesServices : Service, IObjectIssuesServices
    {
        private readonly IObjectIssuesBusinessWorkflow workflow;

        public ObjectIssuesServices(IObjectIssuesBusinessWorkflow workflow)
        {
            this.workflow = workflow;
        }

        public List<IObjectIssueModel> Any(GetObjectIssues request) { return workflow.Search(request); }
        public List<IObjectIssueModel> Any(GetObjectIssuesAsListing request) { return workflow.Search(request, true); }
        public IObjectIssueModel Any(GetObjectIssue request) { return workflow.Get(request.ID); }
        public IObjectIssueModel Any(GetObjectIssueByKey request) { return workflow.Get(request.CustomKey); }
        public IObjectIssueModel Any(CreateObjectIssue request) { return workflow.Create(request); }
        public IObjectIssueModel Any(UpdateObjectIssue request) { return workflow.Update(request); }
        public bool Any(DeactivateObjectIssue request) { return workflow.Deactivate(request.ID); }
        public bool Any(DeactivateObjectIssueByKey request) { return workflow.Deactivate(request.CustomKey); }
        public bool Any(RemoveObjectIssue request) { return workflow.Remove(request.ID); }
        public bool Any(RemoveObjectIssueByKey request) { return workflow.Remove(request.CustomKey); }
    }
}
