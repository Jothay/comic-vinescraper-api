// <auto-generated>
// <copyright file="Episodes.IEpisodeObjectModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the EpisodeObject model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Services//.Episodes
{
    using System;
    using System.Collections.Generic;
    using Interfaces.BusinessWorkflows;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using ServiceStack;

    public class EpisodeObjectModelBase : NameableEntityModelBase, IEpisodeObjectModel
    {
        // EpisodeObject Properties
        // <None>
        // Related Objects
        public int EpisodeId { get; set; }
        public IEpisodeModel Episode { get; set; }
        public int ObjectId { get; set; }
        public IObjectModel Object { get; set; }
        // Associated Objects
        // <None>
    }
    public class EpisodeObjectSearchModelBase : NameableEntitySearchModelBase, IEpisodeObjectSearchModel
    {
        [ApiMember(Name = "EpisodeId", IsRequired = false, Description = "Filter by the Related EpisodeId")]
        public int? EpisodeId { get; set; }

        [ApiMember(Name = "EpisodeCustomKey", IsRequired = false, Description = "Filter by the Related Episode CustomKey (Equals, Case-Insensitive)")]
        public string EpisodeCustomKey { get; set; }

        [ApiMember(Name = "EpisodeApiDetailUrl", IsRequired = false, Description = "Filter by the Related Episode Api Detail Url (Contains, Case-Insensitive)")]
        public string EpisodeApiDetailUrl { get; set; }

        [ApiMember(Name = "EpisodeSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Episode Site Detail Url (Contains, Case-Insensitive)")]
        public string EpisodeSiteDetailUrl { get; set; }

        [ApiMember(Name = "EpisodeName", IsRequired = false, Description = "Filter by the Related Episode Name (Contains, Case-Insensitive)")]
        public string EpisodeName { get; set; }

        [ApiMember(Name = "EpisodeShortDescription", IsRequired = false, Description = "Filter by the Related Episode Short Description (Contains, Case-Insensitive)")]
        public string EpisodeShortDescription { get; set; }

        [ApiMember(Name = "EpisodeDescription", IsRequired = false, Description = "Filter by the Related Episode Description (Contains, Case-Insensitive)")]
        public string EpisodeDescription { get; set; }

        [ApiMember(Name = "ObjectId", IsRequired = false, Description = "Filter by the Related ObjectId")]
        public int? ObjectId { get; set; }

        [ApiMember(Name = "ObjectCustomKey", IsRequired = false, Description = "Filter by the Related Object CustomKey (Equals, Case-Insensitive)")]
        public string ObjectCustomKey { get; set; }

        [ApiMember(Name = "ObjectApiDetailUrl", IsRequired = false, Description = "Filter by the Related Object Api Detail Url (Contains, Case-Insensitive)")]
        public string ObjectApiDetailUrl { get; set; }

        [ApiMember(Name = "ObjectSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Object Site Detail Url (Contains, Case-Insensitive)")]
        public string ObjectSiteDetailUrl { get; set; }

        [ApiMember(Name = "ObjectName", IsRequired = false, Description = "Filter by the Related Object Name (Contains, Case-Insensitive)")]
        public string ObjectName { get; set; }

        [ApiMember(Name = "ObjectShortDescription", IsRequired = false, Description = "Filter by the Related Object Short Description (Contains, Case-Insensitive)")]
        public string ObjectShortDescription { get; set; }

        [ApiMember(Name = "ObjectDescription", IsRequired = false, Description = "Filter by the Related Object Description (Contains, Case-Insensitive)")]
        public string ObjectDescription { get; set; }

    }

    [Route("/EpisodeObjects/", "GET", Summary = "Gets All Active EpisodeObjects")]
    public class GetEpisodeObjects : EpisodeObjectSearchModelBase, IReturn<List<IEpisodeObjectModel>> { }

    [Route("/EpisodeObjects/Listing", "GET", Summary = "Gets All Active EpisodeObjects with the mininum header information")]
    public class GetEpisodeObjectsAsListing : EpisodeObjectSearchModelBase, IReturn<List<IEpisodeObjectModel>> { }

    [Route("/EpisodeObjects/{ID}", "GET", Summary = "Gets EpisodeObject by Identifier")]
    public class GetEpisodeObject : ImplementsID, IReturn<IEpisodeObjectModel> { }

    [Route("/EpisodeObjects/{CustomKey}/ByKey", "GET", Summary = "Gets EpisodeObject by Key")]
    public class GetEpisodeObjectByKey : ImplementsKey, IReturn<IEpisodeObjectModel> { }

    //[Authenticate]
    [Route("/EpisodeObjects/Create", "POST", Summary = "Creates an EpisodeObject with these contents")]
    public class CreateEpisodeObject : EpisodeObjectModelBase, IReturn<IEpisodeObjectModel> { }

    //[Authenticate]
    [Route("/EpisodeObjects/Update", "POST", Summary = "Updates an EpisodeObject with new contents")]
    public class UpdateEpisodeObject : EpisodeObjectModelBase, IReturn<IEpisodeObjectModel> { }

    //[Authenticate]
    [Route("/EpisodeObjects/{ID}/Deactivate", "POST", Summary = "Deactivates an EpisodeObject by Identifier")]
    public class DeactivateEpisodeObject : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/EpisodeObjects/{CustomKey}/DeactivateByKey", "POST", Summary = "Deactivates an EpisodeObject by Key")]
    public class DeactivateEpisodeObjectByKey : ImplementsKey, IReturn<bool> { }

    //[Authenticate]
    [Route("/EpisodeObjects/{ID}/Remove", "POST", Summary = "Removes an EpisodeObject by Identifier")]
    public class RemoveEpisodeObject : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/EpisodeObjects/{CustomKey}/RemoveByKey", "POST", Summary = "Removes an EpisodeObject by Key")]
    public class RemoveEpisodeObjectByKey : ImplementsKey, IReturn<bool> { }

    public interface IEpisodeObjectsServices
    {
        List<IEpisodeObjectModel> Any(GetEpisodeObjects request);
        List<IEpisodeObjectModel> Any(GetEpisodeObjectsAsListing request);
        IEpisodeObjectModel Any(GetEpisodeObject request);
        IEpisodeObjectModel Any(GetEpisodeObjectByKey request);
        IEpisodeObjectModel Any(CreateEpisodeObject request);
        IEpisodeObjectModel Any(UpdateEpisodeObject request);
        bool Any(DeactivateEpisodeObject request);
        bool Any(DeactivateEpisodeObjectByKey request);
        bool Any(RemoveEpisodeObject request);
        bool Any(RemoveEpisodeObjectByKey request);
    }

    public class EpisodeObjectsServices : /*ServicesBase,*/ IEpisodeObjectsServices
    {
        private readonly IEpisodeObjectsBusinessWorkflow workflow;

        public EpisodeObjectsServices(IEpisodeObjectsBusinessWorkflow workflow)
        {
            this.workflow = workflow;
        }

        public List<IEpisodeObjectModel> Any(GetEpisodeObjects request) { return workflow.Search(request); }
        public List<IEpisodeObjectModel> Any(GetEpisodeObjectsAsListing request) { return workflow.Search(request, true); }
        public IEpisodeObjectModel Any(GetEpisodeObject request) { return workflow.Get(request.ID); }
        public IEpisodeObjectModel Any(GetEpisodeObjectByKey request) { return workflow.Get(request.CustomKey); }
        public IEpisodeObjectModel Any(CreateEpisodeObject request) { return workflow.Create(request); }
        public IEpisodeObjectModel Any(UpdateEpisodeObject request) { return workflow.Update(request); }
        public bool Any(DeactivateEpisodeObject request) { return workflow.Deactivate(request.ID); }
        public bool Any(DeactivateEpisodeObjectByKey request) { return workflow.Deactivate(request.CustomKey); }
        public bool Any(RemoveEpisodeObject request) { return workflow.Remove(request.ID); }
        public bool Any(RemoveEpisodeObjectByKey request) { return workflow.Remove(request.CustomKey); }
    }
}
