// <auto-generated>
// <copyright file="Objects.IObjectModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Object model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Services//.Objects
{
    using System;
    using System.Collections.Generic;
    using Interfaces.BusinessWorkflows;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using ServiceStack;

    public class ObjectModelBase : NameableEntityModelBase, IObjectModel
    {
        // Object Properties
        public int? StartYear { get; set; }
        // Related Objects
        public int FirstIssueAppearanceId { get; set; }
        public IIssueModel FirstIssueAppearance { get; set; }
        public int PrimaryImageFileId { get; set; }
        public IImageFileModel PrimaryImageFile { get; set; }
        // Associated Objects
        public List<IObjectAliasModel> ObjectAliases { get; set; }
        public List<IObjectAppearedInIssueModel> ObjectIssuesAppearedIn { get; set; }
        public List<IObjectIssueModel> ObjectIssues { get; set; }
        public List<IObjectMovieModel> ObjectMovies { get; set; }
        public List<IObjectStoryArcModel> ObjectStoryArcs { get; set; }
        public List<IObjectVolumeModel> ObjectVolumes { get; set; }
    }
    public class ObjectSearchModelBase : NameableEntitySearchModelBase, IObjectSearchModel
    {
        [ApiMember(Name = "FirstIssueAppearanceId", IsRequired = false, Description = "Filter by the Related FirstIssueAppearanceId")]
        public int? FirstIssueAppearanceId { get; set; }

        [ApiMember(Name = "FirstIssueAppearanceCustomKey", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance CustomKey (Equals, Case-Insensitive)")]
        public string FirstIssueAppearanceCustomKey { get; set; }

        [ApiMember(Name = "FirstIssueAppearanceApiDetailUrl", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Api Detail Url (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceApiDetailUrl { get; set; }

        [ApiMember(Name = "FirstIssueAppearanceSiteDetailUrl", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Site Detail Url (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceSiteDetailUrl { get; set; }

        [ApiMember(Name = "FirstIssueAppearanceName", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Name (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceName { get; set; }

        [ApiMember(Name = "FirstIssueAppearanceShortDescription", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Short Description (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceShortDescription { get; set; }

        [ApiMember(Name = "FirstIssueAppearanceDescription", IsRequired = false, Description = "Filter by the Related FirstIssueAppearance Description (Contains, Case-Insensitive)")]
        public string FirstIssueAppearanceDescription { get; set; }

        [ApiMember(Name = "PrimaryImageFileId", IsRequired = false, Description = "Filter by the Related PrimaryImageFileId")]
        public int? PrimaryImageFileId { get; set; }

        [ApiMember(Name = "PrimaryImageFileCustomKey", IsRequired = false, Description = "Filter by the Related PrimaryImageFile CustomKey (Equals, Case-Insensitive)")]
        public string PrimaryImageFileCustomKey { get; set; }

        [ApiMember(Name = "PrimaryImageFileApiDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Api Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageFileApiDetailUrl { get; set; }

        [ApiMember(Name = "PrimaryImageFileSiteDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Site Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageFileSiteDetailUrl { get; set; }

        [ApiMember(Name = "PrimaryImageFileName", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Name (Contains, Case-Insensitive)")]
        public string PrimaryImageFileName { get; set; }

        [ApiMember(Name = "PrimaryImageFileShortDescription", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Short Description (Contains, Case-Insensitive)")]
        public string PrimaryImageFileShortDescription { get; set; }

        [ApiMember(Name = "PrimaryImageFileDescription", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Description (Contains, Case-Insensitive)")]
        public string PrimaryImageFileDescription { get; set; }

    }

    [Route("/Objects/", "GET", Summary = "Gets All Active Objects")]
    public class GetObjects : ObjectSearchModelBase, IReturn<List<IObjectModel>> { }

    [Route("/Objects/Listing", "GET", Summary = "Gets All Active Objects with the mininum header information")]
    public class GetObjectsAsListing : ObjectSearchModelBase, IReturn<List<IObjectModel>> { }

    [Route("/Objects/{ID}", "GET", Summary = "Gets Object by Identifier")]
    public class GetObject : ImplementsID, IReturn<IObjectModel> { }

    [Route("/Objects/{CustomKey}/ByKey", "GET", Summary = "Gets Object by Key")]
    public class GetObjectByKey : ImplementsKey, IReturn<IObjectModel> { }

    //[Authenticate]
    [Route("/Objects/Create", "POST", Summary = "Creates an Object with these contents")]
    public class CreateObject : ObjectModelBase, IReturn<IObjectModel> { }

    //[Authenticate]
    [Route("/Objects/Update", "POST", Summary = "Updates an Object with new contents")]
    public class UpdateObject : ObjectModelBase, IReturn<IObjectModel> { }

    //[Authenticate]
    [Route("/Objects/{ID}/Deactivate", "POST", Summary = "Deactivates an Object by Identifier")]
    public class DeactivateObject : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/Objects/{CustomKey}/DeactivateByKey", "POST", Summary = "Deactivates an Object by Key")]
    public class DeactivateObjectByKey : ImplementsKey, IReturn<bool> { }

    //[Authenticate]
    [Route("/Objects/{ID}/Remove", "POST", Summary = "Removes an Object by Identifier")]
    public class RemoveObject : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/Objects/{CustomKey}/RemoveByKey", "POST", Summary = "Removes an Object by Key")]
    public class RemoveObjectByKey : ImplementsKey, IReturn<bool> { }

    public interface IObjectsServices
    {
        List<IObjectModel> Any(GetObjects request);
        List<IObjectModel> Any(GetObjectsAsListing request);
        IObjectModel Any(GetObject request);
        IObjectModel Any(GetObjectByKey request);
        IObjectModel Any(CreateObject request);
        IObjectModel Any(UpdateObject request);
        bool Any(DeactivateObject request);
        bool Any(DeactivateObjectByKey request);
        bool Any(RemoveObject request);
        bool Any(RemoveObjectByKey request);
    }

    public class ObjectsServices : Service, IObjectsServices
    {
        private readonly IObjectsBusinessWorkflow workflow;

        public ObjectsServices(IObjectsBusinessWorkflow workflow)
        {
            this.workflow = workflow;
        }

        public List<IObjectModel> Any(GetObjects request) { return workflow.Search(request); }
        public List<IObjectModel> Any(GetObjectsAsListing request) { return workflow.Search(request, true); }
        public IObjectModel Any(GetObject request) { return workflow.Get(request.ID); }
        public IObjectModel Any(GetObjectByKey request) { return workflow.Get(request.CustomKey); }
        public IObjectModel Any(CreateObject request) { return workflow.Create(request); }
        public IObjectModel Any(UpdateObject request) { return workflow.Update(request); }
        public bool Any(DeactivateObject request) { return workflow.Deactivate(request.ID); }
        public bool Any(DeactivateObjectByKey request) { return workflow.Deactivate(request.CustomKey); }
        public bool Any(RemoveObject request) { return workflow.Remove(request.ID); }
        public bool Any(RemoveObjectByKey request) { return workflow.Remove(request.CustomKey); }
    }
}
