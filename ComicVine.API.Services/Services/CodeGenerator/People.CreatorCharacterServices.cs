// <auto-generated>
// <copyright file="People.ICreatorCharacterModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the CreatorCharacter model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Services//.People
{
    using System;
    using System.Collections.Generic;
    using Interfaces.BusinessWorkflows;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using ServiceStack;

    public class CreatorCharacterModelBase : NameableEntityModelBase, ICreatorCharacterModel
    {
        // CreatorCharacter Properties
        // <None>
        // Related Objects
        public int PersonId { get; set; }
        public IPersonModel Creator { get; set; }
        public int CharacterId { get; set; }
        public ICharacterModel Character { get; set; }
        // Associated Objects
        // <None>
    }
    public class CreatorCharacterSearchModelBase : NameableEntitySearchModelBase, ICreatorCharacterSearchModel
    {
        [ApiMember(Name = "PersonId", IsRequired = false, Description = "Filter by the Related PersonId")]
        public int? PersonId { get; set; }

        [ApiMember(Name = "CreatorApiDetailUrl", IsRequired = false, Description = "Filter by the Related Creator Api Detail Url (Contains, Case-Insensitive)")]
        public string CreatorApiDetailUrl { get; set; }

        [ApiMember(Name = "CreatorSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Creator Site Detail Url (Contains, Case-Insensitive)")]
        public string CreatorSiteDetailUrl { get; set; }

        [ApiMember(Name = "CreatorName", IsRequired = false, Description = "Filter by the Related Creator Name (Contains, Case-Insensitive)")]
        public string CreatorName { get; set; }

        [ApiMember(Name = "CreatorShortDescription", IsRequired = false, Description = "Filter by the Related Creator Short Description (Contains, Case-Insensitive)")]
        public string CreatorShortDescription { get; set; }

        [ApiMember(Name = "CreatorDescription", IsRequired = false, Description = "Filter by the Related Creator Description (Contains, Case-Insensitive)")]
        public string CreatorDescription { get; set; }

        [ApiMember(Name = "CharacterId", IsRequired = false, Description = "Filter by the Related CharacterId")]
        public int? CharacterId { get; set; }

        [ApiMember(Name = "CharacterCustomKey", IsRequired = false, Description = "Filter by the Related Character CustomKey (Equals, Case-Insensitive)")]
        public string CharacterCustomKey { get; set; }

        [ApiMember(Name = "CharacterApiDetailUrl", IsRequired = false, Description = "Filter by the Related Character Api Detail Url (Contains, Case-Insensitive)")]
        public string CharacterApiDetailUrl { get; set; }

        [ApiMember(Name = "CharacterSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Character Site Detail Url (Contains, Case-Insensitive)")]
        public string CharacterSiteDetailUrl { get; set; }

        [ApiMember(Name = "CharacterName", IsRequired = false, Description = "Filter by the Related Character Name (Contains, Case-Insensitive)")]
        public string CharacterName { get; set; }

        [ApiMember(Name = "CharacterShortDescription", IsRequired = false, Description = "Filter by the Related Character Short Description (Contains, Case-Insensitive)")]
        public string CharacterShortDescription { get; set; }

        [ApiMember(Name = "CharacterDescription", IsRequired = false, Description = "Filter by the Related Character Description (Contains, Case-Insensitive)")]
        public string CharacterDescription { get; set; }

    }

    [Route("/CreatorCharacters/", "GET", Summary = "Gets All Active CreatorCharacters")]
    public class GetCreatorCharacters : CreatorCharacterSearchModelBase, IReturn<List<ICreatorCharacterModel>> { }

    [Route("/CreatorCharacters/Listing", "GET", Summary = "Gets All Active CreatorCharacters with the mininum header information")]
    public class GetCreatorCharactersAsListing : CreatorCharacterSearchModelBase, IReturn<List<ICreatorCharacterModel>> { }

    [Route("/CreatorCharacters/{ID}", "GET", Summary = "Gets CreatorCharacter by Identifier")]
    public class GetCreatorCharacter : ImplementsID, IReturn<ICreatorCharacterModel> { }

    [Route("/CreatorCharacters/{CustomKey}/ByKey", "GET", Summary = "Gets CreatorCharacter by Key")]
    public class GetCreatorCharacterByKey : ImplementsKey, IReturn<ICreatorCharacterModel> { }

    //[Authenticate]
    [Route("/CreatorCharacters/Create", "POST", Summary = "Creates an CreatorCharacter with these contents")]
    public class CreateCreatorCharacter : CreatorCharacterModelBase, IReturn<ICreatorCharacterModel> { }

    //[Authenticate]
    [Route("/CreatorCharacters/Update", "POST", Summary = "Updates an CreatorCharacter with new contents")]
    public class UpdateCreatorCharacter : CreatorCharacterModelBase, IReturn<ICreatorCharacterModel> { }

    //[Authenticate]
    [Route("/CreatorCharacters/{ID}/Deactivate", "POST", Summary = "Deactivates an CreatorCharacter by Identifier")]
    public class DeactivateCreatorCharacter : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/CreatorCharacters/{CustomKey}/DeactivateByKey", "POST", Summary = "Deactivates an CreatorCharacter by Key")]
    public class DeactivateCreatorCharacterByKey : ImplementsKey, IReturn<bool> { }

    //[Authenticate]
    [Route("/CreatorCharacters/{ID}/Remove", "POST", Summary = "Removes an CreatorCharacter by Identifier")]
    public class RemoveCreatorCharacter : ImplementsID, IReturn<bool> { }

    //[Authenticate]
    [Route("/CreatorCharacters/{CustomKey}/RemoveByKey", "POST", Summary = "Removes an CreatorCharacter by Key")]
    public class RemoveCreatorCharacterByKey : ImplementsKey, IReturn<bool> { }

    public interface ICreatorCharactersServices
    {
        List<ICreatorCharacterModel> Any(GetCreatorCharacters request);
        List<ICreatorCharacterModel> Any(GetCreatorCharactersAsListing request);
        ICreatorCharacterModel Any(GetCreatorCharacter request);
        ICreatorCharacterModel Any(GetCreatorCharacterByKey request);
        ICreatorCharacterModel Any(CreateCreatorCharacter request);
        ICreatorCharacterModel Any(UpdateCreatorCharacter request);
        bool Any(DeactivateCreatorCharacter request);
        bool Any(DeactivateCreatorCharacterByKey request);
        bool Any(RemoveCreatorCharacter request);
        bool Any(RemoveCreatorCharacterByKey request);
    }

    public class CreatorCharactersServices : Service, ICreatorCharactersServices
    {
        private readonly ICreatorCharactersBusinessWorkflow workflow;

        public CreatorCharactersServices(ICreatorCharactersBusinessWorkflow workflow)
        {
            this.workflow = workflow;
        }

        public List<ICreatorCharacterModel> Any(GetCreatorCharacters request) { return workflow.Search(request); }
        public List<ICreatorCharacterModel> Any(GetCreatorCharactersAsListing request) { return workflow.Search(request, true); }
        public ICreatorCharacterModel Any(GetCreatorCharacter request) { return workflow.Get(request.ID); }
        public ICreatorCharacterModel Any(GetCreatorCharacterByKey request) { return workflow.Get(request.CustomKey); }
        public ICreatorCharacterModel Any(CreateCreatorCharacter request) { return workflow.Create(request); }
        public ICreatorCharacterModel Any(UpdateCreatorCharacter request) { return workflow.Update(request); }
        public bool Any(DeactivateCreatorCharacter request) { return workflow.Deactivate(request.ID); }
        public bool Any(DeactivateCreatorCharacterByKey request) { return workflow.Deactivate(request.CustomKey); }
        public bool Any(RemoveCreatorCharacter request) { return workflow.Remove(request.ID); }
        public bool Any(RemoveCreatorCharacterByKey request) { return workflow.Remove(request.CustomKey); }
    }
}
