// <auto-generated>
// <copyright file="Episodes.IEpisodeLocationFirstAppearanceServices.cs" company="jothay.com">
// Copyright (c) 2015 Jothay Tech, Inc. All rights reserved.
// </copyright>
// <summary>Declares the EpisodeLocationFirstAppearance ServiceStack DTOs and Handlers.</summary>
// <remarks>This file was auto-generated using ServiceFileMaster.tt in
// ComicVineScraper.API.Services\Framework\CodeGenerator</remarks>
// </auto-generated>
namespace ComicVineScraper.API.Services//.Episodes
{
    using System;
    using System.Collections.Generic;
    using Interfaces.BusinessWorkflows;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using ServiceStack;
    using ServiceStack.DataAnnotations;

    public class EpisodeLocationFirstAppearanceModelBase : NameableEntityModelBase, IEpisodeLocationFirstAppearanceModel
    {
        // EpisodeLocationFirstAppearance Properties
        // <None>
        // Related Objects
        public int EpisodeId { get; set; }
        public IEpisodeModel Episode { get; set; }
        public int LocationId { get; set; }
        public ILocationModel Location { get; set; }
        // Associated Objects
        // <None>
    }
    public class EpisodeLocationFirstAppearanceSearchModelBase : NameableEntitySearchModelBase, IEpisodeLocationFirstAppearanceSearchModel
    {
        [ApiMember(Name = "EpisodeId", IsRequired = false, Description = "Filter by the Related EpisodeId")]
        public int? EpisodeId { get; set; }

        [ApiMember(Name = "EpisodeCustomKey", IsRequired = false, Description = "Filter by the Related Episode CustomKey (Equals, Case-Insensitive)")]
        public string EpisodeCustomKey { get; set; }

        [ApiMember(Name = "EpisodeApiDetailUrl", IsRequired = false, Description = "Filter by the Related Episode Api Detail Url (Contains, Case-Insensitive)")]
        public string EpisodeApiDetailUrl { get; set; }

        [ApiMember(Name = "EpisodeSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Episode Site Detail Url (Contains, Case-Insensitive)")]
        public string EpisodeSiteDetailUrl { get; set; }

        [ApiMember(Name = "EpisodeName", IsRequired = false, Description = "Filter by the Related Episode Name (Contains, Case-Insensitive)")]
        public string EpisodeName { get; set; }

        [ApiMember(Name = "EpisodeShortDescription", IsRequired = false, Description = "Filter by the Related Episode Short Description (Contains, Case-Insensitive)")]
        public string EpisodeShortDescription { get; set; }

        [ApiMember(Name = "EpisodeDescription", IsRequired = false, Description = "Filter by the Related Episode Description (Contains, Case-Insensitive)")]
        public string EpisodeDescription { get; set; }

        [ApiMember(Name = "LocationId", IsRequired = false, Description = "Filter by the Related LocationId")]
        public int? LocationId { get; set; }

        [ApiMember(Name = "LocationCustomKey", IsRequired = false, Description = "Filter by the Related Location CustomKey (Equals, Case-Insensitive)")]
        public string LocationCustomKey { get; set; }

        [ApiMember(Name = "LocationApiDetailUrl", IsRequired = false, Description = "Filter by the Related Location Api Detail Url (Contains, Case-Insensitive)")]
        public string LocationApiDetailUrl { get; set; }

        [ApiMember(Name = "LocationSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Location Site Detail Url (Contains, Case-Insensitive)")]
        public string LocationSiteDetailUrl { get; set; }

        [ApiMember(Name = "LocationName", IsRequired = false, Description = "Filter by the Related Location Name (Contains, Case-Insensitive)")]
        public string LocationName { get; set; }

        [ApiMember(Name = "LocationShortDescription", IsRequired = false, Description = "Filter by the Related Location Short Description (Contains, Case-Insensitive)")]
        public string LocationShortDescription { get; set; }

        [ApiMember(Name = "LocationDescription", IsRequired = false, Description = "Filter by the Related Location Description (Contains, Case-Insensitive)")]
        public string LocationDescription { get; set; }

    }

    [Route("/EpisodeLocationFirstAppearances/", "GET", Summary = "Gets All Active EpisodeLocationFirstAppearances")]
    public class GetEpisodeLocationFirstAppearances : EpisodeLocationFirstAppearanceSearchModelBase, IReturn<List<IEpisodeLocationFirstAppearanceModel>> { }

    [Route("/EpisodeLocationFirstAppearances/Listing", "GET", Summary = "Gets All Active EpisodeLocationFirstAppearances with the mininum header information")]
    public class GetEpisodeLocationFirstAppearancesAsListing : EpisodeLocationFirstAppearanceSearchModelBase, IReturn<List<IEpisodeLocationFirstAppearanceModel>> { }

    [Route("/EpisodeLocationFirstAppearances/{ID}", "GET", Summary = "Gets EpisodeLocationFirstAppearance by Identifier")]
    public class GetEpisodeLocationFirstAppearance : ImplementsID, IReturn<IEpisodeLocationFirstAppearanceModel> { }

    [Route("/EpisodeLocationFirstAppearances/{CustomKey}/ByKey", "GET", Summary = "Gets EpisodeLocationFirstAppearance by Key")]
    public class GetEpisodeLocationFirstAppearanceByKey : ImplementsKey, IReturn<IEpisodeLocationFirstAppearanceModel> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/EpisodeLocationFirstAppearances/Create", "POST", Summary = "Creates an EpisodeLocationFirstAppearance with these contents")]
    public class CreateEpisodeLocationFirstAppearance : EpisodeLocationFirstAppearanceModelBase, IReturn<IEpisodeLocationFirstAppearanceModel> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/EpisodeLocationFirstAppearances/Update", "POST", Summary = "Updates an EpisodeLocationFirstAppearance with new contents")]
    public class UpdateEpisodeLocationFirstAppearance : EpisodeLocationFirstAppearanceModelBase, IReturn<IEpisodeLocationFirstAppearanceModel> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/EpisodeLocationFirstAppearances/{ID}/Deactivate", "POST", Summary = "Deactivates an EpisodeLocationFirstAppearance by Identifier")]
    public class DeactivateEpisodeLocationFirstAppearance : ImplementsID, IReturn<bool> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/EpisodeLocationFirstAppearances/{CustomKey}/DeactivateByKey", "POST", Summary = "Deactivates an EpisodeLocationFirstAppearance by Key")]
    public class DeactivateEpisodeLocationFirstAppearanceByKey : ImplementsKey, IReturn<bool> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/EpisodeLocationFirstAppearances/{ID}/Remove", "POST", Summary = "Removes an EpisodeLocationFirstAppearance by Identifier")]
    public class RemoveEpisodeLocationFirstAppearance : ImplementsID, IReturn<bool> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/EpisodeLocationFirstAppearances/{CustomKey}/RemoveByKey", "POST", Summary = "Removes an EpisodeLocationFirstAppearance by Key")]
    public class RemoveEpisodeLocationFirstAppearanceByKey : ImplementsKey, IReturn<bool> { }

    public interface IEpisodeLocationFirstAppearancesServices
    {
        List<IEpisodeLocationFirstAppearanceModel> Any(GetEpisodeLocationFirstAppearances request);
        List<IEpisodeLocationFirstAppearanceModel> Any(GetEpisodeLocationFirstAppearancesAsListing request);
        IEpisodeLocationFirstAppearanceModel Any(GetEpisodeLocationFirstAppearance request);
        IEpisodeLocationFirstAppearanceModel Any(GetEpisodeLocationFirstAppearanceByKey request);
        IEpisodeLocationFirstAppearanceModel Any(CreateEpisodeLocationFirstAppearance request);
        IEpisodeLocationFirstAppearanceModel Any(UpdateEpisodeLocationFirstAppearance request);
        bool Any(DeactivateEpisodeLocationFirstAppearance request);
        bool Any(DeactivateEpisodeLocationFirstAppearanceByKey request);
        bool Any(RemoveEpisodeLocationFirstAppearance request);
        bool Any(RemoveEpisodeLocationFirstAppearanceByKey request);
    }

    public class EpisodeLocationFirstAppearancesServices : Service, IEpisodeLocationFirstAppearancesServices
    {
        private readonly IEpisodeLocationFirstAppearancesBusinessWorkflow workflow;

        public EpisodeLocationFirstAppearancesServices(IEpisodeLocationFirstAppearancesBusinessWorkflow workflow)
        {
            this.workflow = workflow;
        }

        public List<IEpisodeLocationFirstAppearanceModel> Any(GetEpisodeLocationFirstAppearances request) { return workflow.Search(request); }
        public List<IEpisodeLocationFirstAppearanceModel> Any(GetEpisodeLocationFirstAppearancesAsListing request) { return workflow.Search(request, true); }
        public IEpisodeLocationFirstAppearanceModel Any(GetEpisodeLocationFirstAppearance request) { return workflow.Get(request.ID); }
        public IEpisodeLocationFirstAppearanceModel Any(GetEpisodeLocationFirstAppearanceByKey request) { return workflow.Get(request.CustomKey); }
        public IEpisodeLocationFirstAppearanceModel Any(CreateEpisodeLocationFirstAppearance request) { return workflow.Create(request); }
        public IEpisodeLocationFirstAppearanceModel Any(UpdateEpisodeLocationFirstAppearance request) { return workflow.Update(request); }
        public bool Any(DeactivateEpisodeLocationFirstAppearance request) { return workflow.Deactivate(request.ID); }
        public bool Any(DeactivateEpisodeLocationFirstAppearanceByKey request) { return workflow.Deactivate(request.CustomKey); }
        public bool Any(RemoveEpisodeLocationFirstAppearance request) { return workflow.Remove(request.ID); }
        public bool Any(RemoveEpisodeLocationFirstAppearanceByKey request) { return workflow.Remove(request.CustomKey); }
    }
}
