// <auto-generated>
// <copyright file="Origins.IOriginProfileModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the OriginProfile model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Services//.Origins
{
    using System;
    using System.Collections.Generic;
    using Interfaces.BusinessWorkflows;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using ServiceStack;
    using ServiceStack.DataAnnotations;

    public class OriginProfileModelBase : NameableEntityModelBase, IOriginProfileModel
    {
        // OriginProfile Properties
        // <None>
        // Related Objects
        public int OriginId { get; set; }
        public IOriginModel Origin { get; set; }
        public int ProfileId { get; set; }
        public IProfileModel Profile { get; set; }
        // Associated Objects
        // <None>
    }
    public class OriginProfileSearchModelBase : NameableEntitySearchModelBase, IOriginProfileSearchModel
    {
        [ApiMember(Name = "OriginId", IsRequired = false, Description = "Filter by the Related OriginId")]
        public int? OriginId { get; set; }

        [ApiMember(Name = "OriginCustomKey", IsRequired = false, Description = "Filter by the Related Origin CustomKey (Equals, Case-Insensitive)")]
        public string OriginCustomKey { get; set; }

        [ApiMember(Name = "OriginApiDetailUrl", IsRequired = false, Description = "Filter by the Related Origin Api Detail Url (Contains, Case-Insensitive)")]
        public string OriginApiDetailUrl { get; set; }

        [ApiMember(Name = "OriginSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Origin Site Detail Url (Contains, Case-Insensitive)")]
        public string OriginSiteDetailUrl { get; set; }

        [ApiMember(Name = "OriginName", IsRequired = false, Description = "Filter by the Related Origin Name (Contains, Case-Insensitive)")]
        public string OriginName { get; set; }

        [ApiMember(Name = "OriginShortDescription", IsRequired = false, Description = "Filter by the Related Origin Short Description (Contains, Case-Insensitive)")]
        public string OriginShortDescription { get; set; }

        [ApiMember(Name = "OriginDescription", IsRequired = false, Description = "Filter by the Related Origin Description (Contains, Case-Insensitive)")]
        public string OriginDescription { get; set; }

        [ApiMember(Name = "ProfileId", IsRequired = false, Description = "Filter by the Related ProfileId")]
        public int? ProfileId { get; set; }

        [ApiMember(Name = "ProfileCustomKey", IsRequired = false, Description = "Filter by the Related Profile CustomKey (Equals, Case-Insensitive)")]
        public string ProfileCustomKey { get; set; }

        [ApiMember(Name = "ProfileApiDetailUrl", IsRequired = false, Description = "Filter by the Related Profile Api Detail Url (Contains, Case-Insensitive)")]
        public string ProfileApiDetailUrl { get; set; }

        [ApiMember(Name = "ProfileSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Profile Site Detail Url (Contains, Case-Insensitive)")]
        public string ProfileSiteDetailUrl { get; set; }

        [ApiMember(Name = "ProfileName", IsRequired = false, Description = "Filter by the Related Profile Name (Contains, Case-Insensitive)")]
        public string ProfileName { get; set; }

        [ApiMember(Name = "ProfileShortDescription", IsRequired = false, Description = "Filter by the Related Profile Short Description (Contains, Case-Insensitive)")]
        public string ProfileShortDescription { get; set; }

        [ApiMember(Name = "ProfileDescription", IsRequired = false, Description = "Filter by the Related Profile Description (Contains, Case-Insensitive)")]
        public string ProfileDescription { get; set; }

    }

    [Route("/OriginProfiles/", "GET", Summary = "Gets All Active OriginProfiles")]
    public class GetOriginProfiles : OriginProfileSearchModelBase, IReturn<List<IOriginProfileModel>> { }

    [Route("/OriginProfiles/Listing", "GET", Summary = "Gets All Active OriginProfiles with the mininum header information")]
    public class GetOriginProfilesAsListing : OriginProfileSearchModelBase, IReturn<List<IOriginProfileModel>> { }

    [Route("/OriginProfiles/{ID}", "GET", Summary = "Gets OriginProfile by Identifier")]
    public class GetOriginProfile : ImplementsID, IReturn<IOriginProfileModel> { }

    [Route("/OriginProfiles/{CustomKey}/ByKey", "GET", Summary = "Gets OriginProfile by Key")]
    public class GetOriginProfileByKey : ImplementsKey, IReturn<IOriginProfileModel> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/OriginProfiles/Create", "POST", Summary = "Creates an OriginProfile with these contents")]
    public class CreateOriginProfile : OriginProfileModelBase, IReturn<IOriginProfileModel> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/OriginProfiles/Update", "POST", Summary = "Updates an OriginProfile with new contents")]
    public class UpdateOriginProfile : OriginProfileModelBase, IReturn<IOriginProfileModel> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/OriginProfiles/{ID}/Deactivate", "POST", Summary = "Deactivates an OriginProfile by Identifier")]
    public class DeactivateOriginProfile : ImplementsID, IReturn<bool> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/OriginProfiles/{CustomKey}/DeactivateByKey", "POST", Summary = "Deactivates an OriginProfile by Key")]
    public class DeactivateOriginProfileByKey : ImplementsKey, IReturn<bool> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/OriginProfiles/{ID}/Remove", "POST", Summary = "Removes an OriginProfile by Identifier")]
    public class RemoveOriginProfile : ImplementsID, IReturn<bool> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/OriginProfiles/{CustomKey}/RemoveByKey", "POST", Summary = "Removes an OriginProfile by Key")]
    public class RemoveOriginProfileByKey : ImplementsKey, IReturn<bool> { }

    public interface IOriginProfilesServices
    {
        List<IOriginProfileModel> Any(GetOriginProfiles request);
        List<IOriginProfileModel> Any(GetOriginProfilesAsListing request);
        IOriginProfileModel Any(GetOriginProfile request);
        IOriginProfileModel Any(GetOriginProfileByKey request);
        IOriginProfileModel Any(CreateOriginProfile request);
        IOriginProfileModel Any(UpdateOriginProfile request);
        bool Any(DeactivateOriginProfile request);
        bool Any(DeactivateOriginProfileByKey request);
        bool Any(RemoveOriginProfile request);
        bool Any(RemoveOriginProfileByKey request);
    }

    public class OriginProfilesServices : Service, IOriginProfilesServices
    {
        private readonly IOriginProfilesBusinessWorkflow workflow;

        public OriginProfilesServices(IOriginProfilesBusinessWorkflow workflow)
        {
            this.workflow = workflow;
        }

        public List<IOriginProfileModel> Any(GetOriginProfiles request) { return workflow.Search(request); }
        public List<IOriginProfileModel> Any(GetOriginProfilesAsListing request) { return workflow.Search(request, true); }
        public IOriginProfileModel Any(GetOriginProfile request) { return workflow.Get(request.ID); }
        public IOriginProfileModel Any(GetOriginProfileByKey request) { return workflow.Get(request.CustomKey); }
        public IOriginProfileModel Any(CreateOriginProfile request) { return workflow.Create(request); }
        public IOriginProfileModel Any(UpdateOriginProfile request) { return workflow.Update(request); }
        public bool Any(DeactivateOriginProfile request) { return workflow.Deactivate(request.ID); }
        public bool Any(DeactivateOriginProfileByKey request) { return workflow.Deactivate(request.CustomKey); }
        public bool Any(RemoveOriginProfile request) { return workflow.Remove(request.ID); }
        public bool Any(RemoveOriginProfileByKey request) { return workflow.Remove(request.CustomKey); }
    }
}
