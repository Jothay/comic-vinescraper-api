// <auto-generated>
// <copyright file="Origins.IOriginServices.cs" company="jothay.com">
// Copyright (c) 2015 Jothay Tech, Inc. All rights reserved.
// </copyright>
// <summary>Declares the Origin ServiceStack DTOs and Handlers.</summary>
// <remarks>This file was auto-generated using ServiceFileMaster.tt in
// ComicVineScraper.API.Services\Framework\CodeGenerator</remarks>
// </auto-generated>
namespace ComicVineScraper.API.Services//.Origins
{
    using System;
    using System.Collections.Generic;
    using Interfaces.BusinessWorkflows;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using ServiceStack;
    using ServiceStack.DataAnnotations;

    public class OriginModelBase : NameableEntityModelBase, IOriginModel
    {
        // Origin Properties
        public string CharacterSet { get; set; }
        // Related Objects
        // <None>
        // Associated Objects
        public List<IOriginProfileModel> OriginProfiles { get; set; }
    }
    public class OriginSearchModelBase : NameableEntitySearchModelBase, IOriginSearchModel
    {
        // No Origin Search Properties
    }

    [Route("/Origins/", "GET", Summary = "Gets All Active Origins")]
    public class GetOrigins : OriginSearchModelBase, IReturn<List<IOriginModel>> { }

    [Route("/Origins/Listing", "GET", Summary = "Gets All Active Origins with the mininum header information")]
    public class GetOriginsAsListing : OriginSearchModelBase, IReturn<List<IOriginModel>> { }

    [Route("/Origins/{ID}", "GET", Summary = "Gets Origin by Identifier")]
    public class GetOrigin : ImplementsID, IReturn<IOriginModel> { }

    [Route("/Origins/{CustomKey}/ByKey", "GET", Summary = "Gets Origin by Key")]
    public class GetOriginByKey : ImplementsKey, IReturn<IOriginModel> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/Origins/Create", "POST", Summary = "Creates an Origin with these contents")]
    public class CreateOrigin : OriginModelBase, IReturn<IOriginModel> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/Origins/Update", "POST", Summary = "Updates an Origin with new contents")]
    public class UpdateOrigin : OriginModelBase, IReturn<IOriginModel> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/Origins/{ID}/Deactivate", "POST", Summary = "Deactivates an Origin by Identifier")]
    public class DeactivateOrigin : ImplementsID, IReturn<bool> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/Origins/{CustomKey}/DeactivateByKey", "POST", Summary = "Deactivates an Origin by Key")]
    public class DeactivateOriginByKey : ImplementsKey, IReturn<bool> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/Origins/{ID}/Remove", "POST", Summary = "Removes an Origin by Identifier")]
    public class RemoveOrigin : ImplementsID, IReturn<bool> { }

    [Authenticate][Exclude(Feature.Metadata)][Restrict(VisibilityTo = RequestAttributes.None)]
    [Route("/Origins/{CustomKey}/RemoveByKey", "POST", Summary = "Removes an Origin by Key")]
    public class RemoveOriginByKey : ImplementsKey, IReturn<bool> { }

    public interface IOriginsServices
    {
        List<IOriginModel> Any(GetOrigins request);
        List<IOriginModel> Any(GetOriginsAsListing request);
        IOriginModel Any(GetOrigin request);
        IOriginModel Any(GetOriginByKey request);
        IOriginModel Any(CreateOrigin request);
        IOriginModel Any(UpdateOrigin request);
        bool Any(DeactivateOrigin request);
        bool Any(DeactivateOriginByKey request);
        bool Any(RemoveOrigin request);
        bool Any(RemoveOriginByKey request);
    }

    public class OriginsServices : Service, IOriginsServices
    {
        private readonly IOriginsBusinessWorkflow workflow;

        public OriginsServices(IOriginsBusinessWorkflow workflow)
        {
            this.workflow = workflow;
        }

        public List<IOriginModel> Any(GetOrigins request) { return workflow.Search(request); }
        public List<IOriginModel> Any(GetOriginsAsListing request) { return workflow.Search(request, true); }
        public IOriginModel Any(GetOrigin request) { return workflow.Get(request.ID); }
        public IOriginModel Any(GetOriginByKey request) { return workflow.Get(request.CustomKey); }
        public IOriginModel Any(CreateOrigin request) { return workflow.Create(request); }
        public IOriginModel Any(UpdateOrigin request) { return workflow.Update(request); }
        public bool Any(DeactivateOrigin request) { return workflow.Deactivate(request.ID); }
        public bool Any(DeactivateOriginByKey request) { return workflow.Deactivate(request.CustomKey); }
        public bool Any(RemoveOrigin request) { return workflow.Remove(request.ID); }
        public bool Any(RemoveOriginByKey request) { return workflow.Remove(request.CustomKey); }
    }
}
