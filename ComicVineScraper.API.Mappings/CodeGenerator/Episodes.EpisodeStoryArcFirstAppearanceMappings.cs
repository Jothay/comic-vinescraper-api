// <auto-generated>
// <copyright file="Episodes.IEpisodeStoryArcFirstAppearanceModel.cs" company="jothay.com">
// Copyright (c) 2015 Jothay Tech, Inc. All rights reserved. ComicVine Original Api Copyright (c) ComicVine a subsidiary of CBS.
// </copyright>
// <summary>Implements the Mapping Layer functions between EpisodeStoryArcFirstAppearance and EpisodeStoryArcFirstAppearanceModel.</summary>
// <remarks>This file was auto-generated using MappingFileMaster.tt in ComicVine.API.Mappings\Mappings\CodeGenerator</remarks>
// </auto-generated>
// ReSharper disable ClassWithVirtualMembersNeverInherited.Global, RedundantUsingDirective, UnusedMember.Global, UnusedMethodReturnValue.Global
namespace ComicVine.API.Mappings//.Episodes
{
    using System.Collections.Generic;
    using System.Linq;
    using DataModel.Schema;
    using Interfaces.DataModels;
    using Interfaces.Mappers;
    using Interfaces.Models;
    using Interfaces.SearchModels;
    using Models;
    using SearchModels;

    public static class EpisodeStoryArcFirstAppearanceMapperExtensions
    {
        public static IEpisodeStoryArcFirstAppearanceMapper Mapper = new EpisodeStoryArcFirstAppearanceMapper();

        public static void OverrideMapper(IEpisodeStoryArcFirstAppearanceMapper mapper) { Mapper = mapper; }

        public static IEpisodeStoryArcFirstAppearance MapToEntity(this IEpisodeStoryArcFirstAppearanceModel model, int currentDepth = 1)
        {
            return Mapper.MapToEntity(model, currentDepth);
        }
        public static void MapToEntity(this IEpisodeStoryArcFirstAppearanceModel model, ref IEpisodeStoryArcFirstAppearance entity, int currentDepth = 1)
        {
            Mapper.MapToEntity(model, ref entity, currentDepth);
        }
        public static IEpisodeStoryArcFirstAppearanceModel MapToModel(this IEpisodeStoryArcFirstAppearance entity, int currentDepth = 1)
        {
            return Mapper.MapToModel(entity, currentDepth);
        }
        public static IEpisodeStoryArcFirstAppearanceModel MapToModelLite(this IEpisodeStoryArcFirstAppearance entity, int currentDepth = 1)
        {
            return Mapper.MapToModelLite(entity, currentDepth);
        }
        public static IEpisodeStoryArcFirstAppearanceModel MapToModelListing(this IEpisodeStoryArcFirstAppearance entity, int currentDepth = 1)
        {
            return Mapper.MapToModelListing(entity, currentDepth);
        }
        public static IEpisodeStoryArcFirstAppearanceSearchModel MapToSearchModel(this IEpisodeStoryArcFirstAppearanceModel model)
        {
            return Mapper.MapToSearchModel(model);
        }
        public static bool AreEqual(this IEpisodeStoryArcFirstAppearanceModel model, IEpisodeStoryArcFirstAppearance entity)
        {
            return Mapper.AreEqual(model, entity);
        }
    }

    public class EpisodeStoryArcFirstAppearanceMapper : IEpisodeStoryArcFirstAppearanceMapper
    {
        public virtual IEpisodeStoryArcFirstAppearance MapToEntity(IEpisodeStoryArcFirstAppearanceModel model, int currentDepth = 1)
        {
            currentDepth++;
            var entity = EntityMapper.MapToEntity<EpisodeStoryArcFirstAppearance, IEpisodeStoryArcFirstAppearanceModel>(model);
            // EpisodeStoryArcFirstAppearance Properties
            // <None>
            // Related Objects
            entity.EpisodeId = model.EpisodeId;
            entity.Episode = (Episode)model.Episode?.MapToEntity();
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
            // Return Entity
            return entity;
        }

        public virtual void MapToEntity(IEpisodeStoryArcFirstAppearanceModel model, ref IEpisodeStoryArcFirstAppearance entity, int currentDepth = 1)
        {
            currentDepth++;
            // Assign Base properties
            EntityMapper.MapToEntity(model, ref entity);
            // EpisodeStoryArcFirstAppearance Properties
            // <None>
            // Related Objects
            entity.EpisodeId = model.EpisodeId;
            entity.Episode = (Episode)model.Episode?.MapToEntity();
            entity.StoryArcId = model.StoryArcId;
            entity.StoryArc = (StoryArc)model.StoryArc?.MapToEntity();
            // Associated Objects
            // <None>
        }

        public virtual IEpisodeStoryArcFirstAppearanceModel MapToModel(IEpisodeStoryArcFirstAppearance entity, int currentDepth = 1)
        {
            currentDepth++;
            var model = EntityMapper.MapToModel<IEpisodeStoryArcFirstAppearance, EpisodeStoryArcFirstAppearanceModel>(entity);
            // EpisodeStoryArcFirstAppearance Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.Episode = entity.Episode?.MapToModel();
            model.StoryArcId = entity.StoryArcId;
            model.StoryArc = entity.StoryArc?.MapToModel();
            // Associated Objects
            // <None>
            // Return Entity
            return model;
        }

        public virtual IEpisodeStoryArcFirstAppearanceModel MapToModelLite(IEpisodeStoryArcFirstAppearance entity, int currentDepth = 1)
        {
            currentDepth++;
            var model = EntityMapper.MapToModelLite<IEpisodeStoryArcFirstAppearance, EpisodeStoryArcFirstAppearanceModel>(entity);
            // EpisodeStoryArcFirstAppearance Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public virtual IEpisodeStoryArcFirstAppearanceModel MapToModelListing(IEpisodeStoryArcFirstAppearance entity, int currentDepth = 1)
        {
            currentDepth++;
            var model = EntityMapper.MapToModelListing<IEpisodeStoryArcFirstAppearance, EpisodeStoryArcFirstAppearanceModel>(entity);
            // EpisodeStoryArcFirstAppearance Properties
            // <None>
            // Related Objects
            model.EpisodeId = entity.EpisodeId;
            model.StoryArcId = entity.StoryArcId;
            // Return Entity
            return model;
        }

        public virtual IEpisodeStoryArcFirstAppearanceSearchModel MapToSearchModel(IEpisodeStoryArcFirstAppearanceModel model)
        {
            var searchModel = EntityMapper.MapToSearchModel<IEpisodeStoryArcFirstAppearanceModel, EpisodeStoryArcFirstAppearanceSearchModel>(model);
            // Search Properties
            searchModel.EpisodeId = model.EpisodeId;
            searchModel.EpisodeCustomKey = model.Episode?.CustomKey;
            searchModel.EpisodeApiDetailUrl = model.Episode?.ApiDetailUrl;
            searchModel.EpisodeSiteDetailUrl = model.Episode?.SiteDetailUrl;
            searchModel.EpisodeName = model.Episode?.Name;
            searchModel.EpisodeShortDescription = model.Episode?.ShortDescription;
            searchModel.EpisodeDescription = model.Episode?.Description;
            searchModel.StoryArcId = model.StoryArcId;
            searchModel.StoryArcCustomKey = model.StoryArc?.CustomKey;
            searchModel.StoryArcApiDetailUrl = model.StoryArc?.ApiDetailUrl;
            searchModel.StoryArcSiteDetailUrl = model.StoryArc?.SiteDetailUrl;
            searchModel.StoryArcName = model.StoryArc?.Name;
            searchModel.StoryArcShortDescription = model.StoryArc?.ShortDescription;
            searchModel.StoryArcDescription = model.StoryArc?.Description;
            // Return Search Model
            return searchModel;
        }

        public virtual bool AreEqual(IEpisodeStoryArcFirstAppearanceModel model, IEpisodeStoryArcFirstAppearance entity)
        {
            return EntityMapper.AreEqual(model, entity)
                // EpisodeStoryArcFirstAppearance Properties
                // <None>
                // Related Objects
                && model.EpisodeId == entity.EpisodeId
                && model.StoryArcId == entity.StoryArcId
                ;
        }
    }
}
