// <auto-generated>
// <copyright file="Volumes.VolumeModels.cs" company="jothay.com">
// Copyright (c) 2015 Jothay Tech, Inc. All rights reserved.
// </copyright>
// <summary>Declares the Volume Model and Search Model concrete classes.</summary>
// <remarks>This file was auto-generated using ModelFileMaster.tt in
// ComicVineScraper.API.Models\CodeGenerator</remarks>
// </auto-generated>
namespace ComicVineScraper.API.Models
{
    using System;
    using System.Collections.Generic;
    using Interfaces.Models;

    public partial class VolumeModel : NameableEntityModel, IVolumeModel
    {
        // Volume Properties
        public int Startyear { get; set; }
        // Related Objects
        public int? PrimaryImageFileId { get; set; }
        public IImageFileModel PrimaryImageFile { get; set; }
        public int? FirstIssueId { get; set; }
        public IIssueModel FirstIssue { get; set; }
        public int? LastIssueId { get; set; }
        public IIssueModel LastIssue { get; set; }
        public int? PublisherId { get; set; }
        public IPublisherModel Publisher { get; set; }
        // Associated Objects
        public List<IIssueModel> Issues { get; set; }
        public List<IVolumeAliasModel> VolumeAliases { get; set; }
        public List<IVolumeCharacterModel> VolumeCharacters { get; set; }
        public List<IVolumeConceptModel> VolumeConcepts { get; set; }
        public List<IVolumeLocationModel> VolumeLocations { get; set; }
        public List<IVolumeObjectModel> VolumeObjects { get; set; }
        public List<IVolumeTeamModel> VolumeTeams { get; set; }
        public List<IVolumeWriterModel> VolumeWriters { get; set; }
    }
}

namespace ComicVineScraper.API.SearchModels
{
    public partial class VolumeSearchModel : NameableEntitySearchModel, Interfaces.SearchModels.IVolumeSearchModel
    {
        [ServiceStack.ApiMember(Name = "PrimaryImageFileId", IsRequired = false, Description = "Filter by the Related PrimaryImageFileId")]
        public int? PrimaryImageFileId { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileCustomKey", IsRequired = false, Description = "Filter by the Related PrimaryImageFile CustomKey (Equals, Case-Insensitive)")]
        public string PrimaryImageFileCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileApiDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Api Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageFileApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileSiteDetailUrl", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Site Detail Url (Contains, Case-Insensitive)")]
        public string PrimaryImageFileSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileName", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Name (Contains, Case-Insensitive)")]
        public string PrimaryImageFileName { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileShortDescription", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Short Description (Contains, Case-Insensitive)")]
        public string PrimaryImageFileShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "PrimaryImageFileDescription", IsRequired = false, Description = "Filter by the Related PrimaryImageFile Description (Contains, Case-Insensitive)")]
        public string PrimaryImageFileDescription { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueId", IsRequired = false, Description = "Filter by the Related FirstIssueId")]
        public int? FirstIssueId { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueCustomKey", IsRequired = false, Description = "Filter by the Related FirstIssue CustomKey (Equals, Case-Insensitive)")]
        public string FirstIssueCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueApiDetailUrl", IsRequired = false, Description = "Filter by the Related FirstIssue Api Detail Url (Contains, Case-Insensitive)")]
        public string FirstIssueApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueSiteDetailUrl", IsRequired = false, Description = "Filter by the Related FirstIssue Site Detail Url (Contains, Case-Insensitive)")]
        public string FirstIssueSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueName", IsRequired = false, Description = "Filter by the Related FirstIssue Name (Contains, Case-Insensitive)")]
        public string FirstIssueName { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueShortDescription", IsRequired = false, Description = "Filter by the Related FirstIssue Short Description (Contains, Case-Insensitive)")]
        public string FirstIssueShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "FirstIssueDescription", IsRequired = false, Description = "Filter by the Related FirstIssue Description (Contains, Case-Insensitive)")]
        public string FirstIssueDescription { get; set; }

        [ServiceStack.ApiMember(Name = "LastIssueId", IsRequired = false, Description = "Filter by the Related LastIssueId")]
        public int? LastIssueId { get; set; }

        [ServiceStack.ApiMember(Name = "LastIssueCustomKey", IsRequired = false, Description = "Filter by the Related LastIssue CustomKey (Equals, Case-Insensitive)")]
        public string LastIssueCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "LastIssueApiDetailUrl", IsRequired = false, Description = "Filter by the Related LastIssue Api Detail Url (Contains, Case-Insensitive)")]
        public string LastIssueApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "LastIssueSiteDetailUrl", IsRequired = false, Description = "Filter by the Related LastIssue Site Detail Url (Contains, Case-Insensitive)")]
        public string LastIssueSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "LastIssueName", IsRequired = false, Description = "Filter by the Related LastIssue Name (Contains, Case-Insensitive)")]
        public string LastIssueName { get; set; }

        [ServiceStack.ApiMember(Name = "LastIssueShortDescription", IsRequired = false, Description = "Filter by the Related LastIssue Short Description (Contains, Case-Insensitive)")]
        public string LastIssueShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "LastIssueDescription", IsRequired = false, Description = "Filter by the Related LastIssue Description (Contains, Case-Insensitive)")]
        public string LastIssueDescription { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherId", IsRequired = false, Description = "Filter by the Related PublisherId")]
        public int? PublisherId { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherCustomKey", IsRequired = false, Description = "Filter by the Related Publisher CustomKey (Equals, Case-Insensitive)")]
        public string PublisherCustomKey { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherApiDetailUrl", IsRequired = false, Description = "Filter by the Related Publisher Api Detail Url (Contains, Case-Insensitive)")]
        public string PublisherApiDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherSiteDetailUrl", IsRequired = false, Description = "Filter by the Related Publisher Site Detail Url (Contains, Case-Insensitive)")]
        public string PublisherSiteDetailUrl { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherName", IsRequired = false, Description = "Filter by the Related Publisher Name (Contains, Case-Insensitive)")]
        public string PublisherName { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherShortDescription", IsRequired = false, Description = "Filter by the Related Publisher Short Description (Contains, Case-Insensitive)")]
        public string PublisherShortDescription { get; set; }

        [ServiceStack.ApiMember(Name = "PublisherDescription", IsRequired = false, Description = "Filter by the Related Publisher Description (Contains, Case-Insensitive)")]
        public string PublisherDescription { get; set; }

    }
}
