// <auto-generated>
// <copyright file="Movies.MovieInterfaces.cs" company="jothay.com">
// Copyright (c) 2015 Jothay Tech, Inc. All rights reserved.
// </copyright>
// <summary>Declares the Movie interfaces including Entity, Model, Search Model, Mapper,
// Repository and Business Workflow in the appropriate namespaces.</summary>
// <remarks>This file was auto-generated using InterfaceFileMaster.tt in
// ComicVine.API\Interfaces\CodeGenerator</remarks>
// </auto-generated>
// ReSharper disable RedundantUsingDirective, UnusedMemberInSuper.Global
namespace ComicVine.API.Interfaces.DataModels
{
    using System;
    using System.Collections.Generic;

    public interface IMovie : INameableEntity
    {
        // Movie Properties
        bool HasStaffReview { get; set; }
        string Distributor { get; set; }
        decimal? BoxOfficeRevenue { get; set; }
        decimal? TotalRevenue { get; set; }
        decimal? Budget { get; set; }
        decimal? Rating { get; set; }
        DateTime? ReleaseDate { get; set; }
        decimal? RunTime { get; set; }
        // Related Objects
        int? PrimaryImageFileId { get; set; }
        IImageFile PrimaryImageFile { get; set; }
        // Associated Objects
        ICollection<IMovieCharacter> MovieCharacters { get; set; }
        ICollection<IMovieConcept> MovieConcepts { get; set; }
        ICollection<IMovieLocation> MovieLocations { get; set; }
        ICollection<IMovieObject> MovieObjects { get; set; }
        ICollection<IMovieProducer> MovieProducers { get; set; }
        ICollection<IMovieStoryArc> MovieStoryArcs { get; set; }
        ICollection<IMovieStudio> MovieStudios { get; set; }
        ICollection<IMovieTeam> MovieTeams { get; set; }
        ICollection<IMovieWriter> MovieWriters { get; set; }
    }
}

namespace ComicVine.API.Interfaces.Models
{
    using System;
    using System.Collections.Generic;

    public interface IMovieModel : INameableEntityModel
    {
        // Movie Properties
        bool HasStaffReview { get; set; }
        string Distributor { get; set; }
        decimal? BoxOfficeRevenue { get; set; }
        decimal? TotalRevenue { get; set; }
        decimal? Budget { get; set; }
        decimal? Rating { get; set; }
        DateTime? ReleaseDate { get; set; }
        decimal? RunTime { get; set; }
        // Related Objects
        int? PrimaryImageFileId { get; set; }
        IImageFileModel PrimaryImageFile { get; set; }
        // Associated Objects
        List<IMovieCharacterModel> MovieCharacters { get; set; }
        List<IMovieConceptModel> MovieConcepts { get; set; }
        List<IMovieLocationModel> MovieLocations { get; set; }
        List<IMovieObjectModel> MovieObjects { get; set; }
        List<IMovieProducerModel> MovieProducers { get; set; }
        List<IMovieStoryArcModel> MovieStoryArcs { get; set; }
        List<IMovieStudioModel> MovieStudios { get; set; }
        List<IMovieTeamModel> MovieTeams { get; set; }
        List<IMovieWriterModel> MovieWriters { get; set; }
    }
}

namespace ComicVine.API.Interfaces.SearchModels
{
    public interface IMovieSearchModel : INameableEntitySearchModel
    {
        int? PrimaryImageFileId { get; set; }
        string PrimaryImageFileCustomKey { get; set; }
        string PrimaryImageFileApiDetailUrl { get; set; }
        string PrimaryImageFileSiteDetailUrl { get; set; }
        string PrimaryImageFileName { get; set; }
        string PrimaryImageFileShortDescription { get; set; }
        string PrimaryImageFileDescription { get; set; }
        bool? HasStaffReview { get; set; }
        string Distributor { get; set; }
    }
}

namespace ComicVine.API.Interfaces.Mappers
{
    public interface IMovieMapper
        : IMapper<
            DataModels.IMovie,
            Models.IMovieModel,
            SearchModels.IMovieSearchModel>
    {
    }
}

namespace ComicVine.API.Interfaces.Repositories
{
    public interface IMoviesRepository
        : IRepositoryBase
        , IRepository<DataModels.IMovie, SearchModels.IMovieSearchModel>
    {
    }
}

namespace ComicVine.API.Interfaces.BusinessWorkflows
{
    public interface IMoviesBusinessWorkflow
        : IBusinessWorkflow<Models.IMovieModel, SearchModels.IMovieSearchModel>
    {
    }
}
