// <auto-generated>
// <copyright file="Issues.IIssueModel.cs" company="clarityventures.com">
// Copyright (c) 2015 Clarity Ventures, Inc. All rights reserved.
// </copyright>
// <summary>Implements the Issue model interfaces.</summary>
// <remarks>This file was autogenerated using InterfaceFileMaster.tt in ComicVine.API\Interfaces\00.AutoGenerated</remarks>
// </auto-generated>
namespace ComicVine.API.Interfaces.DataModels
{
    using System;
    using System.Collections.Generic;

    public interface IIssue : INameableEntity
    {
        // Issue Properties
        bool HasStaffReview { get; set; }
        DateTime? CoverDate { get; set; }
        DateTime? StoreDate { get; set; }
        string IssueNumber { get; set; }
        // Related Objects
        int? PrimaryImageFileId { get; set; }
        IImageFile PrimaryImageFile { get; set; }
        int? VolumeId { get; set; }
        IVolume Volume { get; set; }
        // Associated Objects
        ICollection<IIssueAlias> IssueAliases { get; set; }
        ICollection<IStoryArcIssue> IssueStoryArcs { get; set; }
        ICollection<IIssueWriter> IssueWriters { get; set; }
    }
}

namespace ComicVine.API.Interfaces.Models
{
    using System;
    using System.Collections.Generic;

    public interface IIssueModel : INameableEntityModel
    {
        // Issue Properties
        bool HasStaffReview { get; set; }
        DateTime? CoverDate { get; set; }
        DateTime? StoreDate { get; set; }
        string IssueNumber { get; set; }
        // Related Objects
        int? PrimaryImageFileId { get; set; }
        IImageFileModel PrimaryImageFile { get; set; }
        int? VolumeId { get; set; }
        IVolumeModel Volume { get; set; }
        // Associated Objects
        List<IIssueAliasModel> IssueAliases { get; set; }
        List<IStoryArcIssueModel> IssueStoryArcs { get; set; }
        List<IIssueWriterModel> IssueWriters { get; set; }
    }
}

namespace ComicVine.API.Interfaces.SearchModels
{
    public interface IIssueSearchModel : INameableEntitySearchModel
    {
        int? PrimaryImageFileId { get; set; }
        string PrimaryImageFileCustomKey { get; set; }
        string PrimaryImageFileApiDetailUrl { get; set; }
        string PrimaryImageFileSiteDetailUrl { get; set; }
        string PrimaryImageFileName { get; set; }
        string PrimaryImageFileShortDescription { get; set; }
        string PrimaryImageFileDescription { get; set; }
        int? VolumeId { get; set; }
        string VolumeCustomKey { get; set; }
        string VolumeApiDetailUrl { get; set; }
        string VolumeSiteDetailUrl { get; set; }
        string VolumeName { get; set; }
        string VolumeShortDescription { get; set; }
        string VolumeDescription { get; set; }
        bool? HasStaffReview { get; set; }
    }
}

namespace ComicVine.API.Interfaces.Mappers
{
    public interface IIssueMapper
        : IMapper<
            DataModels.IIssue,
            Models.IIssueModel,
            SearchModels.IIssueSearchModel>
    {
    }
}

namespace ComicVine.API.Interfaces.Repositories
{
    public interface IIssuesRepository
        : IRepositoryBase
        , IRepository<DataModels.IIssue, SearchModels.IIssueSearchModel>
    {
    }
}

namespace ComicVine.API.Interfaces.BusinessWorkflows
{
    public interface IIssuesBusinessWorkflow
        : IBusinessWorkflow<Models.IIssueModel, SearchModels.IIssueSearchModel>
    {
    }
}
